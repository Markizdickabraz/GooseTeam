{"version":3,"file":"static/js/545.0617f470.chunk.js","mappings":"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","sources":["redux/filterdate/filterdate-selector.js","components/PeriodPaginator/PeriodPaginator.jsx","components/StatisticsChart/StatisticsChart.styled.jsx","components/StatisticsChart/StatisticsChart.jsx","pages/Statistics.styled.jsx","pages/Statistics.jsx","redux/tasks/selectors.js"],"sourcesContent":["export const selectFilterDate = state => state.filterdate;\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectFilterDate } from 'redux/filterdate/filterdate-selector';\nimport { setFilterDate } from 'redux/filterdate/filterdate-slice';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport './PeriodPaginator.css';\nimport Icons from '../../images/svg/sprite.svg';\n\nconst PeriodPaginator = () => {\n  const filterdate = useSelector(selectFilterDate);\n  const dispatch = useDispatch();\n\n  const CustomInput = React.forwardRef(({ value, onClick }, ref) => (\n    <button className=\"custom-input\" onClick={onClick} ref={ref}>\n      {value}\n    </button>\n  ));\n\n  const handleChange = date => {\n    dispatch(setFilterDate(date[Symbol.toPrimitive]('number')));\n  };\n\n  const addOneDay = (date = new Date()) => {\n    date.setDate(date.getDate() + 1);\n    return date;\n  };\n  const previousOneDay = (date = new Date()) => {\n    date.setDate(date.getDate() - 1);\n    return date;\n  };\n\n  const nextDate = () => {\n    dispatch(\n      setFilterDate(\n        addOneDay(new Date(filterdate))[Symbol.toPrimitive]('number')\n      )\n    );\n  };\n  const previousDate = () => {\n    dispatch(\n      setFilterDate(\n        previousOneDay(new Date(filterdate))[Symbol.toPrimitive]('number')\n      )\n    );\n  };\n\n  return (\n    <div className=\"paginator__box\">\n      <DatePicker\n        selected={filterdate}\n        onChange={handleChange}\n        customInput={<CustomInput />}\n        dateFormat=\"d MMMM yyyy\"\n        calendarStartDay={1}\n        formatWeekDay={nameOfDay => nameOfDay.substr(0, 1)}\n        fixedHeight\n      />\n      <div className=\"paginator__btn--box\">\n        <button className=\"arrow__btn\" onClick={() => previousDate()}>\n          <svg viewBox=\"0 0 18 18\" className=\"arrow\">\n            <use xlinkHref={`${Icons}#chevron-left`} />\n          </svg>\n        </button>\n        <button className=\"arrow__btn\" onClick={() => nextDate()}>\n          <svg viewBox=\"0 0 18 18\" className=\"arrow\">\n            <use xlinkHref={`${Icons}#chevron-right`} />\n          </svg>\n        </button>\n      </div>\n      <div className=\"chart__legend--box\">\n        <ul className=\"chart__legend--list\">\n          <li className=\"chart__legend--item\">\n            <p className=\"chart__legend--text\">By Day</p>\n          </li>\n          <li className=\"chart__legend--item\">\n            <p className=\"chart__legend--text other__color\">By Month</p>\n          </li>\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default PeriodPaginator;\n","import styled from 'styled-components';\nimport { DEVICE_SIZE } from 'styles/deviceWidth';\nimport { themeColors } from 'styles/variables';\n\nconst media = {\n  mobile: `@media screen and (min-width: ${DEVICE_SIZE.mobile})`,\n  tablet: `@media screen and (min-width: ${DEVICE_SIZE.tablet})`,\n  desktop: `@media screen and (min-width: ${DEVICE_SIZE.desktop})`,\n};\n\nexport const StatisticsContainer = styled.section`\n  border: solid ${themeColors.statisticsBorder};\n  margin-right: auto;\n  margin-left: auto;\n  border-radius: 20px;\n  padding: 40px 14px;\n  ${media.mobile} {\n    width: 307px;\n    height: 413px;\n  }\n  ${media.tablet} {\n    width: 640px;\n    height: 424px;\n    border-radius: 29px;\n    padding: 32px 32px;\n  }\n  ${media.desktop} {\n    width: 860px;\n    height: 440px;\n    padding: 40px 40px;\n  }\n`;\n","import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectFilterDate } from 'redux/filterdate/filterdate-selector';\nimport { getTasks } from 'redux/tasks/operations';\nimport {\n  BarChart,\n  Bar,\n  LabelList,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  ResponsiveContainer,\n} from 'recharts';\nimport { selectTasks } from 'redux/tasks/selectors';\nimport { StatisticsContainer } from './StatisticsChart.styled';\nimport './StatisticsChart.css';\n\nconst StatisticsChart = () => {\n  const dispatch = useDispatch();\n  const toDay = useSelector(selectFilterDate);\n  const tasks = useSelector(selectTasks);\n  useEffect(() => {\n    dispatch(getTasks());\n  }, [dispatch]);\n\n  let filteredTasksByDay = null;\n  let filteredTasksByMonth = null;\n  let todoByDay = 0;\n  let inprogressByDay = 0;\n  let doneByDay = 0;\n  let todoByMonth = 0;\n  let inprogressByMonth = 0;\n  let doneByMonth = 0;\n\n  function filteredTasks(tasks) {\n    filteredTasksByDay = tasks.filter(\n      task => new Date(task.date).getDate() === new Date(toDay).getDate()\n    );\n    filteredTasksByMonth = tasks.filter(\n      task => new Date(task.date).getMonth() === new Date(toDay).getMonth()\n    );\n    todoByDay = filteredTasksByDay.filter(\n      task => task.category === 'to-do'\n    ).length;\n    inprogressByDay = filteredTasksByDay.filter(\n      task => task.category === 'in-progress'\n    ).length;\n    doneByDay = filteredTasksByDay.filter(\n      task => task.category === 'done'\n    ).length;\n    todoByMonth = filteredTasksByMonth.filter(\n      task => task.category === 'to-do'\n    ).length;\n    inprogressByMonth = filteredTasksByMonth.filter(\n      task => task.category === 'in-progress'\n    ).length;\n    doneByMonth = filteredTasksByMonth.filter(\n      task => task.category === 'done'\n    ).length;\n  }\n  filteredTasks(tasks);\n\n  const allTasksByDay = todoByDay + inprogressByDay + doneByDay;\n  const allTasksByMonth = todoByMonth + inprogressByMonth + doneByMonth;\n\n  const data = [\n    {\n      name: 'To Do',\n      dv: todoByDay,\n      mv: todoByMonth,\n      dp: `${Math.round((todoByDay / allTasksByDay) * 100) || 0}%`,\n      mp: `${Math.round((todoByMonth / allTasksByMonth) * 100) || 0}%`,\n    },\n    {\n      name: 'In Progress',\n      dv: inprogressByDay,\n      mv: inprogressByMonth,\n      dp: `${Math.round((inprogressByDay / allTasksByDay) * 100) || 0}%`,\n      mp: `${Math.round((inprogressByMonth / allTasksByMonth) * 100) || 0}%`,\n    },\n    {\n      name: 'Done',\n      dv: doneByDay,\n      mv: doneByMonth,\n      dp: `${Math.round((doneByDay / allTasksByDay) * 100) || 0}%`,\n      mp: `${Math.round((doneByMonth / allTasksByMonth) * 100) || 0}%`,\n    },\n  ];\n\n  return (\n    <StatisticsContainer>\n      <p className=\"statistics__title\">Tasks</p>\n      <div className=\"bar__chart\">\n        <ResponsiveContainer>\n          <BarChart\n            data={data}\n            margin={{\n              top: 24,\n            }}\n            barGap={14}\n          >\n            <defs>\n              <linearGradient id=\"colorDv\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                <stop offset=\"5%\" stopColor=\"#FFD2DD\" stopOpacity={0} />\n                <stop offset=\"95%\" stopColor=\"#FFD2DD\" stopOpacity={0.8} />\n              </linearGradient>\n              <linearGradient id=\"colorMv\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                <stop offset=\"5%\" stopColor=\"#3E85F3\" stopOpacity={0} />\n                <stop offset=\"95%\" stopColor=\"#3E85F3\" stopOpacity={0.8} />\n              </linearGradient>\n            </defs>\n            <CartesianGrid vertical={false} stroke=\"#E3F3FF\" />\n            <XAxis\n              dataKey=\"name\"\n              axisLine={false}\n              tickLine={false}\n              height={40}\n            />\n            <YAxis\n              axisLine={false}\n              tickLine={false}\n              width={40}\n              allowDecimals={false}\n              tickMargin={20}\n            />\n            <Tooltip />\n            <Bar dataKey=\"dv\" fill=\"url(#colorDv)\" barSize={27}>\n              <LabelList dataKey=\"dp\" position=\"top\" />\n            </Bar>\n            <Bar dataKey=\"mv\" fill=\"url(#colorMv)\" barSize={27}>\n              <LabelList dataKey=\"mp\" position=\"top\" />\n            </Bar>\n          </BarChart>\n        </ResponsiveContainer>\n      </div>\n    </StatisticsContainer>\n  );\n};\nexport default StatisticsChart;\n","import styled from 'styled-components';\nimport { DEVICE_SIZE } from '../styles/deviceWidth';\nimport { themeColors } from 'styles/variables';\n\nconst media = {\n  tablet: `@media screen and (min-width: ${DEVICE_SIZE.tablet})`,\n  desktop: `@media screen and (min-width: ${DEVICE_SIZE.desktop})`,\n};\n\nexport const StatisticContainer = styled.section`\n  border-radius: 16px;\n  margin-top: 30px;\n  max-width: 1087px;\n  margin-left: auto;\n  margin-right: auto;\n  padding-bottom: 135px;\n  background-color: ${themeColors.secondBackground};\n  ${media.tablet} {\n    padding-bottom: 224px;\n  }\n  ${media.desktop} {\n    padding-bottom: 104px;\n  }\n`;\n","import React from 'react';\nimport PeriodPaginator from '../components/PeriodPaginator/PeriodPaginator';\nimport StatisticsChart from '../components/StatisticsChart/StatisticsChart';\nimport { StatisticContainer } from './Statistics.styled';\n\nconst StatisticsPage = () => {\n  return (\n    <StatisticContainer>\n      <PeriodPaginator />\n      <StatisticsChart />\n    </StatisticContainer>\n  );\n};\n\nexport default StatisticsPage;\n","export const selectTasks = state => state.tasks.items;\n\nexport const selectIsLoading = state => state.tasks.isLoading;\n\nexport const selectError = state => state.tasks.error;\n"],"names":["selectFilterDate","state","filterdate","useSelector","dispatch","useDispatch","CustomInput","React","_ref","ref","value","onClick","_jsx","className","children","nextDate","setFilterDate","date","arguments","length","undefined","Date","setDate","getDate","addOneDay","Symbol","toPrimitive","previousDate","previousOneDay","_jsxs","DatePicker","selected","onChange","customInput","dateFormat","calendarStartDay","formatWeekDay","nameOfDay","substr","fixedHeight","viewBox","xlinkHref","concat","Icons","media","mobile","DEVICE_SIZE","tablet","desktop","StatisticsContainer","styled","section","_templateObject","_taggedTemplateLiteral","themeColors","statisticsBorder","toDay","tasks","selectTasks","useEffect","getTasks","filteredTasksByDay","filteredTasksByMonth","todoByDay","inprogressByDay","doneByDay","todoByMonth","inprogressByMonth","doneByMonth","filter","task","getMonth","category","filteredTasks","allTasksByDay","allTasksByMonth","data","name","dv","mv","dp","Math","round","mp","ResponsiveContainer","BarChart","margin","top","barGap","id","x1","y1","x2","y2","offset","stopColor","stopOpacity","CartesianGrid","vertical","stroke","XAxis","dataKey","axisLine","tickLine","height","YAxis","width","allowDecimals","tickMargin","Tooltip","Bar","fill","barSize","LabelList","position","StatisticContainer","secondBackground","PeriodPaginator","StatisticsChart","items"],"sourceRoot":""}