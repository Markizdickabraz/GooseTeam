{"version":3,"file":"static/js/870.56719ebc.chunk.js","mappings":"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","sources":["redux/filterdate/filterdate-selector.js","components/PeriodPaginator/PeriodPaginator.styled.jsx","components/PeriodPaginator/PeriodPaginator.jsx","components/StatisticsChart/StatisticsChart.styled.jsx","components/StatisticsChart/StatisticsChart.jsx","pages/Statistics.styled.jsx","pages/Statistics.jsx","redux/tasks/selectors.js"],"sourcesContent":["export const selectFilterDate = state => state.filterdate;\n","import styled from 'styled-components';\nimport { DEVICE_SIZE } from 'styles/deviceWidth';\nimport { themeColors } from 'styles/variables';\n\nconst media = {\n  mobile: `@media screen and (min-width: ${DEVICE_SIZE.mobile})`,\n  tablet: `@media screen and (min-width: ${DEVICE_SIZE.tablet})`,\n  desktop: `@media screen and (min-width: ${DEVICE_SIZE.desktop})`,\n};\n\nexport const PaginatorBox = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n  padding: 28px 14px 0 28px;\n  margin-bottom: 40px;\n  ${media.tablet} {\n    align-items: center;\n    padding: 132px 64px 0 64px;\n  }\n  ${media.desktop} {\n    padding: 134px 154px 0 153px;\n  }\n`;\n\nexport const PaginatorBtnBox = styled.div`\n  display: flex;\n  outline: 1px solid ${themeColors.paginatorBtnBorder};\n  padding: 0;\n  box-sizing: border-box;\n  border-radius: 8px;\n  background-color: transparent;\n  &:hover {\n    box-shadow: 0px 4px 4px 0px rgba(0, 0, 0, 0.25);\n  }\n  ${media.tablet} {\n    margin-left: 8px;\n  }\n`;\n\nexport const ArrowBtn = styled.button`\n  display: flex;\n  padding: 7px 10px;\n  background-color: transparent;\n  justify-content: center;\n  align-items: center;\n  border: none;\n  border-bottom-left-radius: 8px;\n  border-bottom-right-radius: 8px;\n  cursor: pointer;\n  &:not(:last-child) {\n    border-right: 1px solid ${themeColors.paginatorBtnBorder};\n    box-sizing: border-box;\n    border-bottom-right-radius: 0px;\n  }\n  ${media.tablet} {\n    padding: 8px 10px;\n  }\n`;\nexport const Arrow = styled.svg`\n  fill: none;\n  stroke: ${themeColors.closeIconColor};\n  width: 16px;\n  height: 16px;\n  ${media.tablet} {\n    width: 18px;\n    height: 18px;\n  }\n`;\nexport const ChartLegendBox = styled.div`\n  margin-top: 20px;\n  width: 100%;\n  ${media.tablet} {\n    margin-left: auto;\n    margin-top: 0;\n    width: auto;\n  }\n`;\nexport const ChartLegendList = styled.ul`\n  display: flex;\n  list-style: none;\n  padding: 0;\n  margin: 0;\n`;\nexport const ChartLegendItem = styled.li`\n  &:not(:last-child) {\n    margin-right: 20px;\n  }\n`;\nexport const ChartLegendText = styled.p`\n  color: ${themeColors.closeIconColor};\n  font-size: 14px;\n  line-height: 18px;\n  font-weight: 400;\n  margin: 0;\n  &::before {\n    display: block;\n    content: ' ';\n    width: 8px;\n    height: 8px;\n    border-radius: 50%;\n    background-color: #ffd2dd;\n    display: inline-block;\n    margin-right: 8px;\n  }\n  ${media.tablet} {\n    font-size: 16px;\n  }\n`;\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectFilterDate } from 'redux/filterdate/filterdate-selector';\nimport { setFilterDate } from 'redux/filterdate/filterdate-slice';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport './PeriodPaginator.css';\nimport {\n  PaginatorBtnBox,\n  ArrowBtn,\n  Arrow,\n  ChartLegendBox,\n  ChartLegendList,\n  ChartLegendItem,\n  ChartLegendText,\n  PaginatorBox,\n} from './PeriodPaginator.styled';\nimport sprite from '../../images/svg/sprite.svg';\n\nexport const PeriodPaginator = () => {\n  const filterdate = useSelector(selectFilterDate);\n  const dispatch = useDispatch();\n\n  const CustomInput = React.forwardRef(({ value, onClick }, ref) => (\n    <button className=\"custom-input\" onClick={onClick} ref={ref}>\n      {value}\n    </button>\n  ));\n\n  const handleChange = date => {\n    dispatch(setFilterDate(date[Symbol.toPrimitive]('number')));\n  };\n\n  const addOneDay = (date = new Date()) => {\n    date.setDate(date.getDate() + 1);\n    return date;\n  };\n  const previousOneDay = (date = new Date()) => {\n    date.setDate(date.getDate() - 1);\n    return date;\n  };\n\n  const nextDate = () => {\n    dispatch(\n      setFilterDate(\n        addOneDay(new Date(filterdate))[Symbol.toPrimitive]('number')\n      )\n    );\n  };\n  const previousDate = () => {\n    dispatch(\n      setFilterDate(\n        previousOneDay(new Date(filterdate))[Symbol.toPrimitive]('number')\n      )\n    );\n  };\n\n  return (\n    <PaginatorBox>\n      <DatePicker\n        selected={filterdate}\n        onChange={handleChange}\n        customInput={<CustomInput />}\n        dateFormat=\"d MMMM yyyy\"\n        calendarStartDay={1}\n        formatWeekDay={nameOfDay => nameOfDay.substr(0, 1)}\n        fixedHeight\n      />\n      <PaginatorBtnBox>\n        <ArrowBtn type=\"button\" onClick={() => previousDate()}>\n          <Arrow width=\"16\" height=\"16\">\n            <use href={`${sprite}#chevron-left`}></use>\n          </Arrow>\n        </ArrowBtn>\n        <ArrowBtn type=\"button\" onClick={() => nextDate()}>\n          <Arrow width=\"16\" height=\"16\">\n            <use href={`${sprite}#chevron-right`}></use>\n          </Arrow>\n        </ArrowBtn>\n      </PaginatorBtnBox>\n      <ChartLegendBox>\n        <ChartLegendList>\n          <ChartLegendItem>\n            <ChartLegendText>By Day</ChartLegendText>\n          </ChartLegendItem>\n          <ChartLegendItem>\n            <ChartLegendText className=\"other__color\">By Month</ChartLegendText>\n          </ChartLegendItem>\n        </ChartLegendList>\n      </ChartLegendBox>\n    </PaginatorBox>\n  );\n};\n\nexport default PeriodPaginator;\n","import styled from 'styled-components';\nimport { DEVICE_SIZE } from 'styles/deviceWidth';\nimport { themeColors } from 'styles/variables';\n\nconst media = {\n  mobile: `@media screen and (min-width: ${DEVICE_SIZE.mobile})`,\n  tablet: `@media screen and (min-width: ${DEVICE_SIZE.tablet})`,\n  desktop: `@media screen and (min-width: ${DEVICE_SIZE.desktop})`,\n};\n\nexport const StatisticsContainer = styled.div`\n  border: solid ${themeColors.statisticsBorder};\n  margin-right: auto;\n  margin-left: auto;\n  border-radius: 20px;\n  padding: 40px 14px;\n  ${media.mobile} {\n    width: 307px;\n    height: 413px;\n  }\n  ${media.tablet} {\n    width: 640px;\n    height: 424px;\n    border-radius: 29px;\n    padding: 32px 32px;\n  }\n  ${media.desktop} {\n    width: 860px;\n    height: 440px;\n    padding: 40px 40px;\n  }\n`;\nexport const StatisticsTitle = styled.div`\n  color: ${themeColors.closeIconColor};\n  font-size: 14px;\n  font-weight: 600;\n  line-height: 150%;\n  margin: 0;\n`;\nexport const BarChartContainer = styled.div`\n  ${media.mobile} {\n    width: 279px;\n    height: 333px;\n  }\n  ${media.tablet} {\n    width: 576px;\n    height: 360px;\n  }\n  ${media.desktop} {\n    width: 780px;\n    height: 360px;\n  }\n`;\n","import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectFilterDate } from 'redux/filterdate/filterdate-selector';\nimport { getTasks } from 'redux/tasks/operations';\nimport {\n  BarChart,\n  Bar,\n  LabelList,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  ResponsiveContainer,\n} from 'recharts';\nimport { selectTasks } from 'redux/tasks/selectors';\nimport {\n  StatisticsContainer,\n  StatisticsTitle,\n  BarChartContainer,\n} from './StatisticsChart.styled';\n\nconst StatisticsChart = () => {\n  const dispatch = useDispatch();\n  const toDay = useSelector(selectFilterDate);\n  const tasks = useSelector(selectTasks);\n  useEffect(() => {\n    dispatch(getTasks());\n  }, [dispatch]);\n\n  let filteredTasksByDay = null;\n  let filteredTasksByMonth = null;\n  let todoByDay = 0;\n  let inprogressByDay = 0;\n  let doneByDay = 0;\n  let todoByMonth = 0;\n  let inprogressByMonth = 0;\n  let doneByMonth = 0;\n\n  function filteredTasks(tasks) {\n    filteredTasksByDay = tasks.filter(\n      task => new Date(task.date).getDate() === new Date(toDay).getDate()\n    );\n    filteredTasksByMonth = tasks.filter(\n      task => new Date(task.date).getMonth() === new Date(toDay).getMonth()\n    );\n    todoByDay = filteredTasksByDay.filter(\n      task => task.category === 'to-do'\n    ).length;\n    inprogressByDay = filteredTasksByDay.filter(\n      task => task.category === 'in-progress'\n    ).length;\n    doneByDay = filteredTasksByDay.filter(\n      task => task.category === 'done'\n    ).length;\n    todoByMonth = filteredTasksByMonth.filter(\n      task => task.category === 'to-do'\n    ).length;\n    inprogressByMonth = filteredTasksByMonth.filter(\n      task => task.category === 'in-progress'\n    ).length;\n    doneByMonth = filteredTasksByMonth.filter(\n      task => task.category === 'done'\n    ).length;\n  }\n  filteredTasks(tasks);\n\n  const allTasksByDay = todoByDay + inprogressByDay + doneByDay;\n  const allTasksByMonth = todoByMonth + inprogressByMonth + doneByMonth;\n\n  const data = [\n    {\n      name: 'To Do',\n      dv: todoByDay,\n      mv: todoByMonth,\n      dp: `${Math.round((todoByDay / allTasksByDay) * 100) || 0}%`,\n      mp: `${Math.round((todoByMonth / allTasksByMonth) * 100) || 0}%`,\n    },\n    {\n      name: 'In Progress',\n      dv: inprogressByDay,\n      mv: inprogressByMonth,\n      dp: `${Math.round((inprogressByDay / allTasksByDay) * 100) || 0}%`,\n      mp: `${Math.round((inprogressByMonth / allTasksByMonth) * 100) || 0}%`,\n    },\n    {\n      name: 'Done',\n      dv: doneByDay,\n      mv: doneByMonth,\n      dp: `${Math.round((doneByDay / allTasksByDay) * 100) || 0}%`,\n      mp: `${Math.round((doneByMonth / allTasksByMonth) * 100) || 0}%`,\n    },\n  ];\n\n  return (\n    <StatisticsContainer>\n      <StatisticsTitle>Tasks</StatisticsTitle>\n      <BarChartContainer>\n        <ResponsiveContainer>\n          <BarChart\n            data={data}\n            margin={{\n              top: 24,\n            }}\n            barGap={14}\n          >\n            <defs>\n              <linearGradient id=\"colorDv\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                <stop offset=\"5%\" stopColor=\"#FFD2DD\" stopOpacity={0} />\n                <stop offset=\"95%\" stopColor=\"#FFD2DD\" stopOpacity={0.8} />\n              </linearGradient>\n              <linearGradient id=\"colorMv\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                <stop offset=\"5%\" stopColor=\"#3E85F3\" stopOpacity={0} />\n                <stop offset=\"95%\" stopColor=\"#3E85F3\" stopOpacity={0.8} />\n              </linearGradient>\n            </defs>\n            <CartesianGrid vertical={false} stroke=\"#E3F3FF\" />\n            <XAxis\n              dataKey=\"name\"\n              axisLine={false}\n              tickLine={false}\n              height={40}\n            />\n            <YAxis\n              axisLine={false}\n              tickLine={false}\n              width={40}\n              allowDecimals={false}\n              tickMargin={20}\n            />\n            <Tooltip />\n            <Bar dataKey=\"dv\" fill=\"url(#colorDv)\" barSize={27}>\n              <LabelList dataKey=\"dp\" position=\"top\" />\n            </Bar>\n            <Bar dataKey=\"mv\" fill=\"url(#colorMv)\" barSize={27}>\n              <LabelList dataKey=\"mp\" position=\"top\" />\n            </Bar>\n          </BarChart>\n        </ResponsiveContainer>\n      </BarChartContainer>\n    </StatisticsContainer>\n  );\n};\nexport default StatisticsChart;\n","import styled from 'styled-components';\nimport { DEVICE_SIZE } from '../styles/deviceWidth';\nimport { themeColors } from 'styles/variables';\n\nconst media = {\n  tablet: `@media screen and (min-width: ${DEVICE_SIZE.tablet})`,\n  desktop: `@media screen and (min-width: ${DEVICE_SIZE.desktop})`,\n};\n\nexport const StatisticContainer = styled.section`\n  border-radius: 16px;\n  margin-top: 30px;\n  max-width: 1087px;\n  margin-left: auto;\n  margin-right: auto;\n  padding-bottom: 135px;\n  background-color: ${themeColors.secondBackground};\n  ${media.tablet} {\n    padding-bottom: 224px;\n  }\n  ${media.desktop} {\n    padding-bottom: 104px;\n  }\n`;\n","import React from 'react';\nimport PeriodPaginator from '../components/PeriodPaginator/PeriodPaginator';\nimport StatisticsChart from '../components/StatisticsChart/StatisticsChart';\nimport { StatisticContainer } from './Statistics.styled';\n\nconst StatisticsPage = () => {\n  return (\n    <StatisticContainer>\n      <PeriodPaginator />\n      <StatisticsChart />\n    </StatisticContainer>\n  );\n};\n\nexport default StatisticsPage;\n","export const selectTasks = state => state.tasks.items;\n\nexport const selectIsLoading = state => state.tasks.isLoading;\n\nexport const selectError = state => state.tasks.error;\n"],"names":["selectFilterDate","state","filterdate","media","mobile","concat","DEVICE_SIZE","tablet","desktop","PaginatorBox","styled","div","_templateObject","_taggedTemplateLiteral","PaginatorBtnBox","_templateObject2","themeColors","paginatorBtnBorder","ArrowBtn","button","_templateObject3","Arrow","svg","_templateObject4","closeIconColor","ChartLegendBox","_templateObject5","ChartLegendList","ul","_templateObject6","ChartLegendItem","li","_templateObject7","ChartLegendText","p","_templateObject8","useSelector","dispatch","useDispatch","CustomInput","React","_ref","ref","value","onClick","_jsx","className","children","nextDate","setFilterDate","date","arguments","length","undefined","Date","setDate","getDate","addOneDay","Symbol","toPrimitive","previousDate","previousOneDay","_jsxs","DatePicker","selected","onChange","customInput","dateFormat","calendarStartDay","formatWeekDay","nameOfDay","substr","fixedHeight","type","width","height","href","sprite","StatisticsContainer","statisticsBorder","StatisticsTitle","BarChartContainer","toDay","tasks","selectTasks","useEffect","getTasks","filteredTasksByDay","filteredTasksByMonth","todoByDay","inprogressByDay","doneByDay","todoByMonth","inprogressByMonth","doneByMonth","filter","task","getMonth","category","filteredTasks","allTasksByDay","allTasksByMonth","data","name","dv","mv","dp","Math","round","mp","ResponsiveContainer","BarChart","margin","top","barGap","id","x1","y1","x2","y2","offset","stopColor","stopOpacity","CartesianGrid","vertical","stroke","XAxis","dataKey","axisLine","tickLine","YAxis","allowDecimals","tickMargin","Tooltip","Bar","fill","barSize","LabelList","position","StatisticContainer","section","secondBackground","PeriodPaginator","StatisticsChart","items"],"sourceRoot":""}