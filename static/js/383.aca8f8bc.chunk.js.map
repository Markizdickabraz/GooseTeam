{"version":3,"file":"static/js/383.aca8f8bc.chunk.js","mappings":"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","sources":["components/Сalendar/DayCalendarHead.styled.jsx","components/Сalendar/DayCalendarHead.jsx","components/TaskModal/utility/validateTaskForm.js","components/TaskModal/utility/autocompleteTaskForm.js","components/TaskModal/TaskForm.styled.jsx","components/TaskModal/TaskForm.jsx","components/TaskModal/TaskModal.jsx","components/Сalendar/AddTaskBtn.styled.jsx","components/Сalendar/AddTaskBtn.jsx","components/Сalendar/ColumnHeadBar.styled.jsx","components/Сalendar/ColumnHeadBar.jsx","components/Сalendar/ColumnTasksList.styled.jsx","components/Сalendar/ContextMenu.styled.jsx","components/Сalendar/ContextMenu.jsx","components/Сalendar/TaskToolbar.styled.jsx","components/Сalendar/TaskToolbar.jsx","components/Сalendar/TaskColumnCard.styled.jsx","components/Сalendar/TaskColumnCard.jsx","components/Сalendar/ColumnTasksList.jsx","components/Сalendar/TasksColumn.styled.jsx","components/Сalendar/TasksColumn.jsx","components/Сalendar/TaskColumnsList.styled.jsx","components/Сalendar/TaskColumnsList.jsx","pages/CalendarPage/ChoosedDay.jsx","redux/tasks/selectors.js"],"sourcesContent":["import styled from 'styled-components';\nimport { DEVICE_SIZE } from '../../styles/deviceWidth';\nimport * as Variables from '../../styles/variables';\n\nconst media = {\n  tablet: `@media screen and (min-width: ${DEVICE_SIZE.tablet})`,\n  desktop: `@media screen and (min-width: ${DEVICE_SIZE.desktop})`,\n};\n\nexport const ListOfDays = styled.ul`\n  display: flex;\n  gap: 19px;\n  width: 100%;\n  margin-bottom: 14px;\n  padding: 14px 18px;\n  background-color: ${Variables.themeColors.mainBackground};\n  border: 1px solid ${Variables.themeColors.borderColor};\n  border-radius: 8px;\n  ${media.tablet} {\n    gap: 69px;\n    margin-bottom: 16px;\n    padding: 10px 32px;\n  }\n  ${media.desktop} {\n    max-width: 1087px;\n    gap: 128px;\n    padding: 10px 46px;\n  }\n`;\n\nexport const ListOfDaysItem = styled.li`\n  display: flex;\n  gap: 6px;\n  flex-direction: column;\n  align-items: center;\n  cursor: pointer;\n  ${media.tablet} {\n    gap: 4px;\n  }\n`;\n\nexport const Week = styled.p`\n  color: ${Variables.themeColors.label};\n  font-size: 16px;\n  font-family: ${Variables.fonts.primary};\n  font-weight: 600;\n  line-height: 1.13;\n  text-transform: uppercase;\n  ${media.tablet} {\n    font-size: 14px;\n    line-height: 1.29;\n  }\n`;\n\nexport const Day = styled.p`\n  padding: 4px 6px;\n  color: ${props => {\n    return props.isSameDay ? '#FFFFFF' : Variables.themeColors.main;\n  }};\n  background-color: ${props => {\n    return props.isSameDay ? '#3E85F3' : 'transparent';\n  }};\n\n  font-size: 12px;\n  font-family: ${Variables.fonts.primary};\n  font-weight: 700;\n  line-height: 1.17;\n  text-transform: uppercase;\n  border-radius: 6px;\n  ${media.tablet} {\n    padding: 4px 8px;\n    font-size: 16px;\n    line-height: 1.13;\n    border-radius: 8px;\n  }\n`;\n","import { format, isSameDay } from 'date-fns';\nimport { parse, startOfWeek, endOfWeek, eachDayOfInterval } from 'date-fns/esm';\nimport { useEffect, useState } from 'react';\nimport { useParams, redirect, useOutletContext } from 'react-router-dom';\nimport {\n  ListOfDays,\n  ListOfDaysItem,\n  Week,\n  Day,\n} from './DayCalendarHead.styled';\n\nexport const DayCalendarHead = () => {\n  const [windowWidth, setWindowWidth] = useState(window.innerWidth);\n  const { currentDay } = useParams();\n  const { setCurrentDate } = useOutletContext();\n  const parsedCurrentDay = parse(currentDay, 'd-MMM-yyyy', new Date());\n\n  const days = eachDayOfInterval({\n    start: startOfWeek(parsedCurrentDay, { weekStartsOn: 1 }),\n    end: endOfWeek(parsedCurrentDay, { weekStartsOn: 1 }),\n  });\n  const handleClickRedirect = e => {\n    redirect(`../day/${e.currentTarget.dataset.date}`, {\n      replace: true,\n    });\n    setCurrentDate(\n      parse(e.currentTarget.dataset.date, 'd-MMMM-yyyy', new Date())\n    );\n  };\n\n  useEffect(() => {\n    const handleResize = () => {\n      setWindowWidth(window.innerWidth);\n    };\n\n    window.addEventListener('resize', handleResize);\n\n    return () => {\n      window.removeEventListener('resize', handleResize);\n    };\n  }, [windowWidth]);\n\n  return (\n    <ListOfDays>\n      {days.map((day, index) => {\n        return (\n          <ListOfDaysItem\n            data-date={format(day, 'd-MMM-yyyy')}\n            onClick={handleClickRedirect}\n            key={format(day, 'd-MMM-yyyy')}\n          >\n            <Week>\n              {windowWidth < 768 ? format(day, 'EEEEE') : format(day, 'EEE')}\n            </Week>\n            <Day isSameDay={isSameDay(day, parsedCurrentDay)}>\n              {format(day, 'd')}\n            </Day>\n          </ListOfDaysItem>\n        );\n      })}\n    </ListOfDays>\n  );\n};\n","const checkFormat = str => {\n  const arr = str.split(':');\n  const res =\n    arr.length === 2 &&\n    arr[0].length === 2 &&\n    arr[1].length === 2 &&\n    !Number.isNaN(Number(arr[0])) &&\n    !Number.isNaN(Number(arr[1]));\n  return res;\n};\n\nconst endAfterStart = (start, end) => {\n  const startArr = start.split(':');\n  const startTime = Number(startArr[0]) * 60 + Number(startArr[1]);\n  const endArr = end.split(':');\n  const endTime = Number(endArr[0]) * 60 + Number(endArr[1]);\n  return endTime > startTime;\n};\n\nconst validate = values => {\n  const errors = {};\n\n  if (!values.title) {\n    errors.title = 'Required';\n  } else if (values.title.length > 250) {\n    errors.title = 'Must be 250 characters or less';\n  }\n\n  if (!values.start) {\n    errors.start = 'Required';\n  } else if (!checkFormat(values.start)) {\n    errors.start = 'XX:YY format only';\n  }\n\n  if (!values.end) {\n    errors.end = 'Required';\n  } else if (!checkFormat(values.end)) {\n    errors.end = 'XX:YY format only';\n  } else if (!endAfterStart(values.start, values.end)) {\n    errors.end = 'End must be after start';\n  }\n\n  if (\n    values.priority !== 'low' &&\n    values.priority !== 'medium' &&\n    values.priority !== 'high'\n  ) {\n    errors.priority = 'Wrong checkbox selected';\n  }\n\n  return errors;\n};\n\nexport { validate };\n\n// date: формат YYYY-MM-DD | обов'язково\n// category: [to-do | in-progress | done] | обов'язково\"\n// ймовірно це валідується в календарі\n","const autocomplete = value => {\n  let res = value;\n\n  if (value.length === 1) {\n    const num = Number(value);\n    if (!Number.isNaN(num)) {\n      if (num > 2) {\n        res = '0' + value + ':';\n      }\n    }\n  }\n\n  if (value.length === 2) {\n    const num = Number(value);\n    if (!Number.isNaN(num)) {\n      if (num > 24) {\n        res = '24:';\n      } else {\n        res = value + ':';\n      }\n    }\n  }\n\n  if (value.length === 4) {\n    const arr = value.split(':');\n    const num = Number(arr[1]);\n\n    if (!Number.isNaN(num)) {\n      if (num > 5) {\n        res = arr[0] + ':0' + arr[1];\n      }\n    }\n  }\n\n  if (value.length === 7) {\n    res = value.slice(0, 6);\n  }\n\n  return res;\n};\n\nexport { autocomplete };\n","import styled from 'styled-components';\nimport { taskColors, buttonColors, animation } from '../../styles/variables';\n\nconst Label = styled.label`\n  display: block;\n  width: 100%;\n\n  font-family: Inter;\n  font-size: 12px;\n  font-weight: 500;\n  line-height: 14px;\n  letter-spacing: 0em;\n  color: #343434cc;\n`;\n\nconst Input = styled.input`\n  display: block;\n  min-width: 10px;\n  width: 100%;\n\n  padding-top: 12px;\n  padding-bottom: 12px;\n  padding-left: 14px;\n  padding-right: 14px;\n  border-radius: 8px;\n  background-color: #f6f6f6;\n\n  font-family: Inter;\n  font-size: 14px;\n  font-weight: 600;\n  line-height: 18px;\n  letter-spacing: 0em;\n  color: #343434;\n\n  border: none;\n  outline: none;\n\n  margin-top: 8px;\n\n  @media screen and (min-width: 768px) {\n    padding-top: 14px;\n    padding-bottom: 14px;\n    padding-left: 18px;\n    padding-right: 18px;\n  }\n`;\n\nconst TimeContainer = styled.div`\n  display: flex;\n  gap: 15px;\n  max-width: 267px;\n\n  margin-top: 16px;\n  margin-bottom: 16px;\n\n  @media screen and (min-width: 375px) {\n    width: 267px;\n  }\n\n  @media screen and (min-width: 768px) {\n    gap: 14px;\n    width: 340px;\n    max-width: 340px;\n    margin-top: 18px;\n    margin-bottom: 28px;\n  }\n`;\n\nconst RadioContainer = styled.div`\n  display: flex;\n  gap: 16px;\n  padding-left: 3px;\n  margin-bottom: 32px;\n`;\n\nconst RadioButton = styled.input`\n  visibility: hidden;\n  opacity: 0;\n  position: absolute;\n\n  &:checked + label::before {\n    outline: 3px solid ${taskColors.priorityLow + '80'};\n  }\n\n  &:checked + label[for='medium']::before {\n    outline-color: ${taskColors.priorityMedium + '80'};\n  }\n\n  &:checked + label[for='high']::before {\n    outline-color: ${taskColors.priorityHigh + '80'};\n  }\n`;\n\nconst RadioLabel = styled.label`\n  font-family: Inter;\n  font-size: 14px;\n  font-weight: 600;\n  line-height: 18px;\n  letter-spacing: 0em;\n  color: #343434;\n\n  &::before {\n    content: '';\n    display: inline-block;\n    width: 9px;\n    height: 9px;\n    border-radius: 50%;\n    background-color: ${taskColors.priorityLow};\n    border: 1px solid white;\n    margin-right: 5px;\n\n    @media screen and (min-width: 768px) {\n      width: 11px;\n      height: 11px;\n    }\n  }\n\n  &[for='medium']::before {\n    background-color: ${taskColors.priorityMedium};\n  }\n\n  &[for='high']::before {\n    background-color: ${taskColors.priorityHigh};\n  }\n`;\n\nconst ButtonContainer = styled.div`\n  display: flex;\n  gap: 14px;\n`;\n\nconst buttonPlaceholder = `\n  width: 100%;\n  padding: 8px;\n  border-radius: 8px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 8px;\n\n  border: none;\n  outline: none;\n\n  font-family: Inter;\n  font-size: 14px;\n  font-weight: 600;\n  line-height: 18px;\n  letter-spacing: 0em;\n  text-align: center;\n\n  transition: background-color ${animation};\n  cursor: pointer;\n\n  @media screen and (min-width: 768px) {\n    padding: 10px;\n  }\n`;\n\nconst Button = styled.button`\n  ${buttonPlaceholder}\n  color: ${buttonColors.white};\n  background-color: ${buttonColors.blue};\n\n  &:hover,\n  &:focus {\n    background-color: #2b78ef;\n  }\n`;\n\nconst LightButton = styled.button`\n  ${buttonPlaceholder}\n  color: #111111;\n  background-color: #efefef;\n\n  &:hover,\n  &:focus {\n    background-color: #e8e8e8;\n  }\n`;\n\nconst Err = styled.p`\n  font-family: Inter;\n  font-size: 14px;\n  font-weight: 500;\n  line-height: 18px;\n  letter-spacing: 0em;\n  color: red;\n`;\n\nconst Svg = styled.svg`\n  stroke: currentColor;\n  fill: ${buttonColors.white};\n`;\n\nexport {\n  Label,\n  Input,\n  TimeContainer,\n  RadioContainer,\n  RadioButton,\n  RadioLabel,\n  ButtonContainer,\n  Button,\n  LightButton,\n  Err,\n  Svg,\n};\n","import { useEffect, useRef } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useFormik } from 'formik';\n\nimport { addTask, updateTask } from '../../redux/tasks/operations';\nimport { validate } from './utility/validateTaskForm';\nimport { autocomplete } from './utility/autocompleteTaskForm';\nimport sprite from 'images/svg/sprite.svg';\n\nimport {\n  Label,\n  Input,\n  TimeContainer,\n  RadioContainer,\n  RadioButton,\n  RadioLabel,\n  ButtonContainer,\n  Button,\n  LightButton,\n  Err,\n  Svg,\n} from './TaskForm.styled';\n\nconst TaskForm = ({ close, create, task }) => {\n  const dispatch = useDispatch();\n\n  const prevStartRef = useRef('');\n  const prevEndRef = useRef('');\n\n  // const date = task.date || '2023-06-23';\n  // const category = task.category || 'to-do';\n  // const id = task.id || '64956a30022ac250ec769b01';\n  const date = task.date;\n  const category = task.category;\n  const id = task._id;\n\n  const formik = useFormik({\n    initialValues: {\n      title: task.title || 'Enter text8',\n      start: task.start || '08:00',\n      end: task.end || '09:30',\n      priority: task.priority || 'low',\n    },\n    validate,\n    onSubmit: values => {\n      const newTask = { ...values, date, category };\n\n      if (create) {\n        addHandler(newTask);\n      } else {\n        editHandler(id, newTask);\n      }\n\n      close();\n    },\n  });\n\n  useEffect(() => {\n    let currentStart = formik.values.start;\n    if (currentStart.length > prevStartRef.current.length) {\n      currentStart = autocomplete(currentStart);\n      formik.values.start = currentStart;\n    }\n    prevStartRef.current = currentStart;\n\n    let currentEnd = formik.values.end;\n    if (currentEnd.length > prevEndRef.current.length) {\n      currentEnd = autocomplete(currentEnd);\n      formik.values.end = currentEnd;\n    }\n    prevEndRef.current = currentStart;\n  });\n\n  const closeHandler = evt => {\n    close();\n  };\n\n  const addHandler = newTask => {\n    dispatch(addTask(newTask));\n  };\n\n  const editHandler = (taskId, newTask) => {\n    console.log(taskId, newTask);\n    dispatch(updateTask({ taskId, newTask }));\n  };\n\n  return (\n    <form onSubmit={formik.handleSubmit}>\n      <div role=\"group\">\n        <Label>\n          Title\n          <Input\n            id=\"title\"\n            name=\"title\"\n            type=\"text\"\n            onChange={formik.handleChange}\n            value={formik.values.title}\n            placeholder=\"Enter text\"\n          />\n          {formik.errors.title && <Err>{formik.errors.title}</Err>}\n        </Label>\n        <TimeContainer>\n          <Label>\n            Start\n            <Input\n              id=\"start\"\n              name=\"start\"\n              type=\"text\"\n              onChange={formik.handleChange}\n              value={formik.values.start}\n              placeholder=\"XX:YY\"\n            />\n            {formik.errors.start && <Err>{formik.errors.start}</Err>}\n          </Label>\n          <Label>\n            End\n            <Input\n              id=\"end\"\n              name=\"end\"\n              type=\"text\"\n              onChange={formik.handleChange}\n              value={formik.values.end}\n              placeholder=\"XX:YY\"\n            />\n            {formik.errors.end && <Err>{formik.errors.end}</Err>}\n          </Label>\n        </TimeContainer>\n\n        <RadioContainer>\n          <RadioButton\n            id=\"low\"\n            name=\"priority\"\n            type=\"radio\"\n            onChange={formik.handleChange}\n            value=\"low\"\n            checked={formik.values.priority === 'low'}\n          />\n          <RadioLabel htmlFor=\"low\">Low</RadioLabel>\n          <RadioButton\n            id=\"medium\"\n            name=\"priority\"\n            type=\"radio\"\n            onChange={formik.handleChange}\n            value=\"medium\"\n            checked={formik.values.priority === 'medium'}\n          />\n          <RadioLabel htmlFor=\"medium\">Medium</RadioLabel>\n          <RadioButton\n            id=\"high\"\n            name=\"priority\"\n            type=\"radio\"\n            onChange={formik.handleChange}\n            value=\"high\"\n            checked={formik.values.priority === 'high'}\n          />\n          <RadioLabel htmlFor=\"high\">High</RadioLabel>\n        </RadioContainer>\n        {formik.errors.priority && <Err>{formik.errors.priority}</Err>}\n      </div>\n\n      {create ? (\n        <ButtonContainer>\n          <Button type=\"submit\">\n            <Svg width=\"20px\" height=\"20px\">\n              <use href={`${sprite}#plus`} />\n            </Svg>\n            Add\n          </Button>\n          <LightButton type=\"button\" onClick={closeHandler}>\n            Cansel\n          </LightButton>\n        </ButtonContainer>\n      ) : (\n        <Button type=\"submit\">\n          <Svg width=\"16px\" height=\"16px\">\n            <use href={`${sprite}#pencil`} />\n          </Svg>\n          Edit\n        </Button>\n      )}\n    </form>\n  );\n};\n\nexport { TaskForm };\n","import { createPortal } from 'react-dom';\n\nimport { Modal } from './Modal';\nimport { TaskForm } from './TaskForm';\n\nconst TaskModal = ({ close, create, task }) => {\n  return createPortal(\n    <Modal close={close}>\n      <TaskForm close={close} create={create} task={task} />\n    </Modal>,\n    document.body\n  );\n};\n\nexport default TaskModal;\n","import styled from 'styled-components';\nimport { DEVICE_SIZE } from '../../styles/deviceWidth';\nimport * as Variables from '../../styles/variables';\n\nconst media = {\n  tablet: `@media screen and (min-width: ${DEVICE_SIZE.tablet})`,\n  desktop: `@media screen and (min-width: ${DEVICE_SIZE.desktop})`,\n};\n\nexport const Button = styled.button`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 8px;\n  padding: 12px 0px;\n  border-radius: 8px;\n  border: 1px dashed ${Variables.buttonColors.blue};\n  background: ${Variables.buttonColors.lightBlue};\n  cursor: pointer;\n  margin-top: 14px;\n  ${media.tablet} {\n    margin-top: 32px;\n  }\n`;\n\nexport const ButtonText = styled.p`\n  text-align: left;\n  color: ${Variables.fontColors.black};\n  font-size: 14px;\n  font-family: ${Variables.fonts.primary};\n  font-weight: 600;\n  line-height: 1.29;\n`;\n","import { FiPlus } from 'react-icons/fi';\nimport { Button, ButtonText } from './AddTaskBtn.styled';\n\nexport const AddTaskBtn = ({ setIsAddModalOpen }) => {\n  return (\n    <Button onClick={() => setIsAddModalOpen(true)} type=\"button\">\n      <div style={{ height: 24 }}>\n        <FiPlus size={24} />\n      </div>\n      <ButtonText>Add task</ButtonText>\n    </Button>\n  );\n};\n","import styled from 'styled-components';\nimport { DEVICE_SIZE } from '../../styles/deviceWidth';\nimport * as Variables from '../../styles/variables';\n\nconst media = {\n  tablet: `@media screen and (min-width: ${DEVICE_SIZE.tablet})`,\n  desktop: `@media screen and (min-width: ${DEVICE_SIZE.desktop})`,\n};\n\nexport const ColumnHead = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 24px;\n  ${media.tablet} {\n    margin-bottom: 28px;\n  }\n  ${media.desktop} {\n    margin-bottom: 35px;\n  }\n`;\n\nexport const Title = styled.h2`\n  padding: 7px 0;\n  color: ${Variables.fontColors.black};\n  text-align: center;\n  font-size: 18px;\n  font-family: ${Variables.fonts.primary};\n  font-weight: 700;\n  line-height: 1.11;\n\n  ${media.tablet} {\n    font-size: 20px;\n    line-height: 1.2;\n  }\n`;\n\nexport const Button = styled.button`\n  display: flex;\n  justify-content: center;\n  width: 24px;\n  height: 24px;\n  padding: 7px 0;\n  align-items: center;\n  background-color: transparent;\n  border: none;\n  cursor: pointer;\n  transition: color 250ms cubic-bezier(0.39, 0.575, 0.565, 1);\n  &:hover,\n  &:focus {\n    color: ${Variables.iconColors.blue};\n  }\n`;\n","import { FiPlusCircle } from 'react-icons/fi';\nimport { ColumnHead, Title, Button } from './ColumnHeadBar.styled';\n\nexport const ColumnHeadBar = ({ setIsAddModalOpen, title }) => {\n  return (\n    <ColumnHead>\n      <Title>{title}</Title>\n      <Button onClick={() => setIsAddModalOpen(true)} type=\"button\">\n        <FiPlusCircle size={24} />\n      </Button>\n    </ColumnHead>\n  );\n};\n","import styled from 'styled-components';\nimport { DEVICE_SIZE } from '../../styles/deviceWidth';\n\nconst media = {\n  tablet: `@media screen and (min-width: ${DEVICE_SIZE.tablet})`,\n  desktop: `@media screen and (min-width: ${DEVICE_SIZE.desktop})`,\n};\n\nexport const TasksList = styled.ul`\n  display: flex;\n  flex-direction: column;\n  max-height: 372px;\n\n  gap: 14px;\n  padding: 0;\n  \n  ${media.desktop} {\n    gap: 18px;\n  }\n`;\n","import styled from 'styled-components';\nimport { DEVICE_SIZE } from '../../styles/deviceWidth';\nimport * as Variables from '../../styles/variables';\n\nconst media = {\n  tablet: `@media screen and (min-width: ${DEVICE_SIZE.tablet})`,\n  desktop: `@media screen and (min-width: ${DEVICE_SIZE.desktop})`,\n};\n\nexport const Menu = styled.menu`\n  position: absolute;\n  top: -50px;\n  left: -152px;\n  margin: 0;\n  max-width: 147px;\n  padding: 14px;\n  border-radius: 8px;\n  background: ${Variables.themeColors.mainBackground};\n  box-shadow: 0px 4px 16px 0px rgba(17, 17, 17, 0.1);\n  border: 1px solid ${Variables.themeColors.borderColor};\n  ${media.tablet} {\n    padding: 20px 24px;\n  }\n`;\n\nexport const List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  gap: 14px;\n  padding: 0;\n`;\n\nexport const ListItem = styled.li`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  color: ${Variables.themeColors.main};\n  width: 100px;\n  font-size: 12px;\n  font-weight: 500;\n  line-height: 1.17;\n  cursor: pointer;\n  ${media.tablet} {\n    font-size: 14px;\n    line-height: 1.29;\n  }\n`;\n\nexport const Svg = styled.svg`\n  stroke: ${Variables.themeColors.main};\n  fill: transparent;\n  width: 16px;\n  height: 16px;\n`;\n","import { useEffect } from 'react';\nimport { List, Menu, ListItem, Svg } from './ContextMenu.styled';\nimport sprite from '../../images/svg/sprite.svg';\nimport { useDispatch } from 'react-redux';\nimport { updateTask } from 'redux/tasks/operations';\n\nexport const ContextMenu = ({\n  contextMenuRef,\n  setIsContextMenu,\n  category,\n  task,\n}) => {\n  const dispatch = useDispatch();\n  const taskId = task._id;\n\n\n  const selectCategories = category => {\n    if (category === 'to-do') {\n      return [\n        { title: 'In progress', newCategory: 'in-progress' },\n        { title: 'Done', newCategory: 'done' },\n      ];\n    }\n    if (category === 'in-progress') {\n      return [\n        { title: 'To do', newCategory: 'to-do' },\n        { title: 'Done', newCategory: 'done' },\n      ];\n    }\n    if (category === 'done') {\n      return [\n        { title: 'To do', newCategory: 'to-do' },\n        { title: 'In progress', newCategory: 'in-progress' },\n      ];\n    }\n  };\n\nconst onMenuClick =  (newCategory) => {\nconst { title, start, end, priority, date} = task; \n\n  const updatedTask = {\n   title,\n    start,\n    end,\n    priority,\n    date,\n    category: newCategory,\n  };\n\ndispatch(updateTask({ taskId, newTask: updatedTask }));\nsetIsContextMenu(false);\n  \n};\n\n\n  useEffect(() => {\n    function handler(e) {\n      if (contextMenuRef.current) {\n        if (!contextMenuRef.current.contains(e.target)) {\n          setIsContextMenu(false);\n        }\n      }\n    }\n    document.addEventListener('click', handler);\n    return () => {\n      document.removeEventListener('click', handler);\n    };\n  }, [contextMenuRef, setIsContextMenu]);\n  return (\n    <Menu ref={contextMenuRef}>\n      <List>\n        {selectCategories(category).map(({ title, newCategory }) => {\n          \n          return (\n            <ListItem key={newCategory} onClick={()=>onMenuClick(newCategory)}>\n              <p>{title}</p>\n              <Svg>\n                <use href={sprite + '#arrow-circle'} />\n              </Svg>\n            </ListItem>\n          );\n        })}\n      </List>\n    </Menu>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  position: relative;\n  display: flex;\n  justify-content: center;\n  align-items: flex-end;\n  gap: 10px;\n`;\n\nexport const Button = styled.button`\n  display: flex;\n  background-color: transparent;\n  border: none;\n  padding: 0;\n`;\n\nexport const Svg = styled.svg`\n  stroke: #212121;\n  fill: transparent;\n  width: 16px;\n  height: 16px;\n  cursor: pointer;\n  transition: stroke 250ms cubic-bezier(0.39, 0.575, 0.565, 1);\n  &:hover,\n  &:focus {\n    stroke: #3e85f3;\n  }\n`;\n","import { useDispatch } from 'react-redux';\nimport { ContextMenu } from './ContextMenu';\nimport { deleteTask } from '../../redux/tasks/operations';\nimport sprite from '../../images/svg/sprite.svg';\nimport { Wrapper, Button, Svg } from './TaskToolbar.styled';\nimport { useState } from 'react';\nimport { useRef } from 'react';\n\nexport const TaskToolbar = ({ setIsModalOpen, task, category }) => {\n  const dispatch = useDispatch();\n  const [isContextMenu, setIsContextMenu] = useState(false);\n  const contextMenuRef = useRef(null);\n  const handleClick = e => {\n    e.stopPropagation();\n    setIsContextMenu(prevState => !prevState);\n  };\n\n  return (\n    <Wrapper>\n      <Button onClick={handleClick} type=\"button\">\n        <Svg>\n          <use href={sprite + '#arrow-circle'} />\n        </Svg>\n      </Button>\n      <Button onClick={() => setIsModalOpen(true)} type=\"button\">\n        <Svg>\n          <use href={sprite + '#pencil'} />\n        </Svg>\n      </Button>\n      <Button onClick={() => dispatch(deleteTask(task._id))} type=\"button\">\n        <Svg>\n          <use href={sprite + '#trash'} />\n        </Svg>\n      </Button>\n      {isContextMenu && (\n        <ContextMenu\n          task={task}\n          category={category}\n          contextMenuRef={contextMenuRef}\n          setIsContextMenu={setIsContextMenu}\n        />\n      )}\n    </Wrapper>\n  );\n};\n","import styled from 'styled-components';\nimport { DEVICE_SIZE } from '../../styles/deviceWidth';\nimport * as Variables from '../../styles/variables';\n\nconst media = {\n  tablet: `@media screen and (min-width: ${DEVICE_SIZE.tablet})`,\n  desktop: `@media screen and (min-width: ${DEVICE_SIZE.desktop})`,\n};\n\nexport const TaskCard = styled.li`\n  width: 100%;\n  height: 108px;\n  padding: 15px;\n  background-color: ${Variables.themeColors.mainBackground};\n  border: 1px solid ${Variables.themeColors.borderColor};\n  border-radius: 8px;\n\n  ${media.tablet} {\n    height: 112px;\n  }\n`;\nexport const TaskTitle = styled.h3`\n  color: ${Variables.themeColors.main};\n  font-size: 14px;\n  font-weight: 500;\n  line-height: 1.29;\n  margin-bottom: 28px;\n  ${media.tablet} {\n    margin-bottom: 32px;\n  }\n`;\n\nexport const Box = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n\nexport const Wrapper = styled.div`\n  display: flex;\n  gap: 8px;\n  align-items: flex-end;\n`;\nexport const AvatarWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 32px;\n  height: 32px;\n  background-color: ${Variables.iconColors.blue};\n  border-radius: 32px;\n`;\nexport const Avatar = styled.img`\n  width: 28px;\n  height: 28px;\n  border-radius: 32px;\n`;\nexport const Level = styled.p`\n  display: inline-block;\n  height: 20px;\n  padding: 4px 12px;\n  border-radius: 4px;\n  text-transform: capitalize;\n  background-color: ${props => {\n    switch (props.priority) {\n      case 'low':\n        return Variables.taskColors.priorityLow;\n      case 'medium':\n        return Variables.taskColors.priorityMedium;\n      case 'high':\n        return Variables.taskColors.priorityHigh;\n      default:\n        return;\n    }\n  }};\n  color: ${Variables.fontColors.white};\n  font-size: 10px;\n  font-weight: 600;\n  line-height: 1.2;\n  text-align: justify;\n`;\n","import { useSelector } from 'react-redux';\nimport { selectUser } from '../../redux/authorization/selectors';\nimport { TaskToolbar } from './TaskToolbar';\nimport TaskModal from '../TaskModal/TaskModal';\nimport {\n  TaskCard,\n  TaskTitle,\n  Box,\n  AvatarWrapper,\n  Avatar,\n  Level,\n  Wrapper,\n} from './TaskColumnCard.styled';\n\nimport { useState } from 'react';\n\nexport const TaskColumnCard = ({ task, category }) => {\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const { avatarURL } = useSelector(selectUser);\n  return (\n    <TaskCard>\n      <TaskTitle>{task.title}</TaskTitle>\n      <Box>\n        <Wrapper>\n          <AvatarWrapper>\n            <Avatar src={avatarURL} alt=\"user avatar\" />\n          </AvatarWrapper>\n          <Level priority={task.priority}>{task.priority}</Level>\n        </Wrapper>\n        <TaskToolbar\n          category={category}\n          task={task}\n          setIsModalOpen={setIsModalOpen}\n        />\n      </Box>\n      {isModalOpen && (\n        <TaskModal\n          close={() => setIsModalOpen(false)}\n          create={false}\n          task={task}\n        />\n      )}\n    </TaskCard>\n  );\n};\n","import { TasksList } from './ColumnTasksList.styled';\nimport { TaskColumnCard } from './TaskColumnCard';\nimport { OverlayScrollbarsComponent } from 'overlayscrollbars-react';\nimport { useParams } from 'react-router-dom';\nimport { isSameDay } from 'date-fns';\nimport 'overlayscrollbars/overlayscrollbars.css';\nimport './Scrollbar.css';\n\n\nexport const ColumnTasksList = ({ tasks, category }) => {\n  const { currentDay } = useParams();\n \n\n  return (\n    <OverlayScrollbarsComponent\n      element=\"div\"\n      options={{\n        overflow: {\n          y: 'scroll',\n          x: 'hidden',\n        },\n      }}\n      defer\n    >\n      <TasksList>\n        {tasks.map(task => {\n          return isSameDay(new Date(currentDay), new Date(task.date)) ? (\n            <TaskColumnCard key={task._id} task={task} category={category} />\n          ) : (\n            false\n          );\n        })}\n      </TasksList>\n    </OverlayScrollbarsComponent>\n  );\n};\n","import styled from 'styled-components';\nimport { DEVICE_SIZE } from '../../styles/deviceWidth';\nimport * as Variables from '../../styles/variables';\n\nconst media = {\n  tablet: `@media screen and (min-width: ${DEVICE_SIZE.tablet})`,\n  desktop: `@media screen and (min-width: ${DEVICE_SIZE.desktop})`,\n};\n\nexport const TaskColumn = styled.li`\n  flex: none;\n  width: 335px;\n  padding: 18px 18px 20px 18px;\n  border-radius: 8px;\n  border: 1px solid ${Variables.themeColors.borderColor};\n\n  ${media.tablet} {\n    width: 344px;\n    padding: 20px 20px 28px 20px;\n  }\n`;\n","import { format } from 'date-fns';\nimport { useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport TaskModal from '../TaskModal/TaskModal';\nimport { AddTaskBtn } from './AddTaskBtn';\nimport { ColumnHeadBar } from './ColumnHeadBar';\nimport { ColumnTasksList } from './ColumnTasksList';\nimport { TaskColumn } from './TasksColumn.styled';\n\nexport const TasksColumn = ({ title, tasks, category }) => {\n  const { currentDay } = useParams();\n  const [isAddModalOpen, setIsAddModalOpen] = useState(false);\n  const date = format(new Date(currentDay), 'yyyy-MM-dd');\n  const newTask = {\n    date,\n    category,\n  };\n\n  return (\n    <TaskColumn key={title}>\n      <ColumnHeadBar setIsAddModalOpen={setIsAddModalOpen} title={title} />\n      <ColumnTasksList\n        tasks={tasks}\n        category={category}\n        isAddModalOpen={isAddModalOpen}\n        setIsAddModalOpen={setIsAddModalOpen}\n      />\n      <AddTaskBtn setIsAddModalOpen={setIsAddModalOpen} />\n      {isAddModalOpen && (\n        <TaskModal\n          close={() => setIsAddModalOpen(false)}\n          create={true}\n          task={newTask}\n        />\n      )}\n    </TaskColumn>\n  );\n};\n","import styled from 'styled-components';\nimport { DEVICE_SIZE } from '../../styles/deviceWidth';\n\nconst media = {\n  tablet: `@media screen and (min-width: ${DEVICE_SIZE.tablet})`,\n  desktop: `@media screen and (min-width: ${DEVICE_SIZE.desktop})`,\n};\n\nexport const ColumnsList = styled.ul`\n  display: flex;\n  align-items: flex-start;\n  margin: 0;\n  padding: 0;\n  ${media.tablet} {\n    gap: 16px;\n    ${media.desktop} {\n      gap: 27px;\n    }\n  }\n`;\n","import { useSelector } from 'react-redux';\nimport { OverlayScrollbarsComponent } from 'overlayscrollbars-react';\nimport { selectTasks } from '../../redux/tasks/selectors';\nimport { TasksColumn } from './TasksColumn';\nimport { ColumnsList } from './TaskColumnsList.styled';\nimport 'overlayscrollbars/overlayscrollbars.css';\nimport './Scrollbar.css';\n\nexport const TaskColumnsList = () => {\n  const tasks = useSelector(selectTasks);\n  const toDoTasks = tasks.filter(task => task.category === 'to-do');\n  const inProgressTasks = tasks.filter(task => task.category === 'in-progress');\n  const doneTasks = tasks.filter(task => task.category === 'done');\n  return (\n    <OverlayScrollbarsComponent\n      element=\"div\"\n      options={{\n        overflow: {\n          x: 'scroll',\n          y: 'hidden',\n        },\n      }}\n      defer\n    >\n      <ColumnsList>\n        <TasksColumn title={'To do'} tasks={toDoTasks} category={'to-do'} />\n        <TasksColumn\n          title={'In progress'}\n          tasks={inProgressTasks}\n          category={'in-progress'}\n        />\n        <TasksColumn title={'Done'} tasks={doneTasks} category={'done'} />\n      </ColumnsList>\n    </OverlayScrollbarsComponent>\n  );\n};\n","import { DayCalendarHead } from '../../components/Сalendar/DayCalendarHead';\nimport { TaskColumnsList } from '../../components/Сalendar/TaskColumnsList';\n\n\nconst ChoosedDay = () => {\n \n  return (\n    <div>\n      <DayCalendarHead />\n      <TaskColumnsList />\n    </div>\n  );\n};\n\nexport default ChoosedDay;\n","export const selectTasks = state => state.tasks.items;\n\nexport const selectIsLoading = state => state.tasks.isLoading;\n\nexport const selectError = state => state.tasks.error;\n"],"names":["media","tablet","concat","DEVICE_SIZE","desktop","ListOfDays","styled","ul","_templateObject","_taggedTemplateLiteral","Variables","mainBackground","borderColor","ListOfDaysItem","li","_templateObject2","Week","p","_templateObject3","label","primary","Day","_templateObject4","props","isSameDay","main","DayCalendarHead","_useState","useState","window","innerWidth","_useState2","_slicedToArray","windowWidth","setWindowWidth","currentDay","useParams","setCurrentDate","useOutletContext","parsedCurrentDay","parse","Date","days","eachDayOfInterval","start","startOfWeek","weekStartsOn","end","endOfWeek","handleClickRedirect","e","redirect","currentTarget","dataset","date","replace","useEffect","handleResize","addEventListener","removeEventListener","_jsx","children","map","day","index","_jsxs","format","onClick","checkFormat","str","arr","split","length","Number","isNaN","validate","values","errors","title","startArr","startTime","endArr","endAfterStart","priority","autocomplete","value","res","num","slice","Label","Input","input","TimeContainer","div","RadioContainer","RadioButton","_templateObject5","taskColors","priorityLow","priorityMedium","priorityHigh","RadioLabel","_templateObject6","ButtonContainer","_templateObject7","buttonPlaceholder","animation","Button","button","_templateObject8","buttonColors","white","blue","LightButton","_templateObject9","Err","_templateObject10","Svg","svg","_templateObject11","TaskForm","_ref","close","create","task","dispatch","useDispatch","prevStartRef","useRef","prevEndRef","category","id","_id","formik","useFormik","initialValues","onSubmit","newTask","_objectSpread","addHandler","editHandler","currentStart","current","currentEnd","addTask","taskId","console","log","updateTask","handleSubmit","role","name","type","onChange","handleChange","placeholder","checked","htmlFor","width","height","href","sprite","evt","createPortal","Modal","document","body","lightBlue","ButtonText","black","AddTaskBtn","setIsAddModalOpen","style","FiPlus","size","ColumnHead","Title","h2","ColumnHeadBar","FiPlusCircle","TasksList","Menu","menu","List","ListItem","ContextMenu","contextMenuRef","setIsContextMenu","handler","contains","target","ref","newCategory","selectCategories","_ref2","updatedTask","onMenuClick","Wrapper","TaskToolbar","setIsModalOpen","isContextMenu","stopPropagation","prevState","deleteTask","TaskCard","TaskTitle","h3","Box","AvatarWrapper","Avatar","img","Level","TaskColumnCard","isModalOpen","avatarURL","useSelector","selectUser","src","alt","TaskModal","ColumnTasksList","tasks","OverlayScrollbarsComponent","element","options","overflow","y","x","defer","TaskColumn","TasksColumn","isAddModalOpen","ColumnsList","TaskColumnsList","selectTasks","toDoTasks","filter","inProgressTasks","doneTasks","state","items"],"sourceRoot":""}