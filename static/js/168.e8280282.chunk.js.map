{"version":3,"file":"static/js/168.e8280282.chunk.js","mappings":"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","sources":["components/account/styles/CustomInput.styled.jsx","components/account/CustomInput.jsx","components/account/styles/Account.styled.jsx","components/account/helpers/date.jsx","components/account/UserSchema.jsx","components/account/styles/Avatar.styled.jsx","components/account/Avatar.jsx","components/account/styles/Calendar.styled.jsx","components/account/Calendar.jsx","components/account/UserForm.jsx","pages/User.jsx"],"sourcesContent":["import { Field } from 'formik';\nimport styled from 'styled-components';\n\nexport const InputContainer = styled.div`\n  position: relative;\n\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  max-width: 354px;\n  flex: 1;\n`;\n\nexport const Input = styled(Field)`\n  padding: 12px 14px;\n  border-radius: 8px;\n  border: 1px solid rgba(17, 17, 17, 0.1);\n  outline: none;\n  background-color: #fff;\n\n  font-size: 14px;\n\n  :focus {\n    border: 1px solid #111;\n  }\n\n  @media (min-width: 768px) {\n    padding: 14px 18px;\n    font-size: 16px;\n  }\n`;\nexport const Label = styled.label`\n  font-size: 12px;\n\n  @media (min-width: 768px) {\n    font-size: 14px;\n  }\n`;\nexport const IconWrapper = styled.div`\n  position: absolute;\n  right: 18px;\n\n  top: ${({ error }) => (error ? '42%' : '50%')};\n  font-size: 16px;\n\n  @media (min-width: 768px) {\n    font-size: 18px;\n  }\n`;\nexport const MessageWrapper = styled.div`\n  p {\n    margin-left: 14px;\n    font-size: 12px;\n\n    @media (min-width: 768px) {\n      margin-left: 18px;\n    }\n  }\n`;\nexport const ErrorText = styled.p`\n  color: red;\n`;\nexport const SuccessText = styled.p`\n  color: green;\n`;\n","import { ErrorMessage, useField } from 'formik';\n\nimport { BsExclamationCircle } from 'react-icons/bs';\nimport { BsCheckCircle } from 'react-icons/bs';\nimport {\n  InputContainer,\n  Label,\n  Input,\n  MessageWrapper,\n  ErrorText,\n  IconWrapper,\n} from './styles/CustomInput.styled';\n\nexport const CustomInput = ({ label, name, setIsFormDirty, ...rest }) => {\n  const [field, meta] = useField(name);\n  const error = meta.touched && meta.error;\n  const isValid = meta.touched && !meta.error && meta.value !== '';\n\n  const color = error ? 'red' : isValid ? 'green' : 'default-color';\n\n  return (\n    <InputContainer>\n      <Label htmlFor={name} style={{ color }}>\n        {label}\n      </Label>\n\n      <Input\n        {...field}\n        {...rest}\n        placeholder={`Your ${name}`}\n        style={{ borderColor: color }}\n        onChange={event => {\n          field.onChange(event);\n          setIsFormDirty(true);\n        }}\n      />\n\n      <MessageWrapper>\n        {error && <ErrorMessage>{meta.error}</ErrorMessage>}\n\n        <ErrorMessage name={name} component={ErrorText} />\n      </MessageWrapper>\n\n      <IconWrapper error={error}>\n        {error ? (\n          <BsExclamationCircle color=\"red\" />\n        ) : (\n          isValid && <BsCheckCircle color=\"green\" />\n        )}\n      </IconWrapper>\n    </InputContainer>\n  );\n};\n","import { Form } from 'formik';\nimport styled from 'styled-components';\n\nexport const FormContainer = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  gap: 40px;\n\n  margin: 40px auto 0 auto;\n  background-color: #fff;\n\n  border-radius: 16px;\n  padding: 18px;\n  padding-bottom: 40px;\n`;\n\nexport const FormWrapper = styled.div`\n  display: flex;\n  margin: 0 auto;\n  gap: 18px;\n\n  @media (max-width: 1144px) {\n    flex-direction: column;\n    max-width: 354px;\n    width: 100%;\n\n    > div {\n      display: flex;\n      flex-direction: column;\n      gap: 18px;\n    }\n  }\n\n  @media (min-width: 1144px) {\n    flex-direction: row;\n    align-items: start;\n    gap: 50px;\n\n    > div {\n      display: flex;\n      flex-direction: column;\n      gap: 24px;\n      width: 100%;\n      justify-content: center;\n      width: 354px;\n    }\n  }\n`;\n\nexport const UserInfo = styled.div`\n  text-align: center;\n\n  p {\n    margin-top: 40px;\n    @media (min-width: 768px) {\n      margin-top: 20px;\n    }\n  }\n\n  p:last-child {\n    margin-top: 4px;\n    @media (min-width: 768px) {\n      margin-top: 8px;\n    }\n  }\n`;\n","export const getMonthNames = () => {\n  return [\n    'January',\n    'February',\n    'March',\n    'April',\n    'May',\n    'June',\n    'July',\n    'August',\n    'September',\n    'October',\n    'November',\n    'December',\n  ];\n};\n\nexport const range = (start, end, step = 1) => {\n  const result = [];\n  for (let i = start; i < end; i += step) {\n    result.push(i);\n  }\n  return result;\n};\n\nexport const formatDateToCustomFormat = dateString => {\n  const date = new Date(dateString);\n  const day = String(date.getDate()).padStart(2, '0');\n  const month = String(date.getMonth() + 1).padStart(2, '0');\n  const year = String(date.getFullYear());\n  return `${day}/${month}/${year}`;\n};\n\nexport const parseDateString = dateString => {\n  const parts = dateString.split('/');\n  const day = parseInt(parts[0], 10);\n  const month = parseInt(parts[1], 10) - 1;\n  const year = parseInt(parts[2], 10);\n\n  return new Date(year, month, day);\n};\n","import * as Yup from 'yup';\nimport { parseDateString } from './helpers/date';\n\nconst dateReg = /^((0[1-9]|[12]\\d|3[01])\\/(0[1-9]|1[012])\\/\\d{4})$/;\nconst phoneReg = /^\\+?\\d{1,3}\\s?\\d{2}\\s?\\d{3}\\s?\\d{2}\\s?\\d{2}$/;\n\nexport const UserSchema = Yup.object().shape({\n  avatarURL: Yup.mixed(),\n  name: Yup.string()\n    .min(2, 'Too short!')\n    .max(16, 'Too long!')\n    .required('Required'),\n  birthday: Yup.string()\n    .matches(dateReg, 'Invalid date of birth')\n    .test(\n      'max-date',\n      'Date of birth cannot be in the future',\n      function (value) {\n        const parsedNewDate = new Date(parseDateString(value));\n        return !value || parsedNewDate <= new Date();\n      }\n    ),\n  email: Yup.string().email('This is an ERROR email').required('Required'),\n  phone: Yup.string().matches(phoneReg, 'This is an ERROR phone'),\n  skype: Yup.string().min(2, 'Too short!').max(16, 'Too long!'),\n});\n","import styled from 'styled-components';\nimport { buttonColors } from '../../../styles/variables';\n\nexport const UpdateAvatarButton = styled.button`\n  background-color: ${buttonColors.blue};\n  outline: none;\n  border: none;\n  padding: 3px;\n  border-radius: 50%;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  cursor: pointer;\n  font-size: 8px;\n\n  @media (min-width: 768px) {\n    font-size: 18px;\n  }\n\n  position: absolute;\n  bottom: -4px;\n  right: 22px;\n\n  @media (max-width: 768px) {\n    position: absolute;\n    bottom: -25px;\n    right: -22px;\n  }\n`;\n\nexport const AvatarContainer = styled.div`\n  margin: 0 auto;\n  position: relative;\n  width: 0px;\n  height: 0px;\n\n  @media (min-width: 768px) {\n    width: 124px;\n    height: 124px;\n  }\n`;\n\nexport const AvatarImg = styled.img`\n  max-width: none;\n\n  @media (max-width: 768px) {\n    position: absolute;\n    top: -50px;\n    left: -35px;\n  }\n\n  object-fit: cover;\n  border-radius: 72px;\n  border: 2px solid #3e85f3;\n  width: 72px;\n  height: 72px;\n\n  @media (min-width: 768px) {\n    width: 124px;\n    height: 124px;\n  }\n`;\n","import React, { useState, useEffect, useRef } from 'react';\n\nimport { AiOutlinePlus } from 'react-icons/ai';\nimport {\n  AvatarContainer,\n  AvatarImg,\n  UpdateAvatarButton,\n} from './styles/Avatar.styled';\n\nexport const Thumb = ({ avatar, file, setFieldValue, setIsFormDirty }) => {\n  const [thumb, setThumb] = useState(undefined);\n  const inputFileRef = useRef(null);\n\n  useEffect(() => {\n    if (!file) return;\n\n    let reader = new FileReader();\n    reader.onloadend = () => {\n      setThumb(reader.result);\n    };\n\n    reader.readAsDataURL(file);\n  }, [file]);\n\n  let avatarUrl;\n  if (avatar.match(/^https:\\/\\/.*/)) {\n    avatarUrl = `${avatar}`;\n  } else {\n    avatarUrl = `https://${avatar}`;\n  }\n\n  return (\n    <AvatarContainer>\n      <AvatarImg src={file ? thumb : avatarUrl} alt=\"avatar\" />\n\n      <input\n        ref={inputFileRef}\n        id=\"avatar\"\n        name=\"avatar\"\n        type=\"file\"\n        onChange={event => {\n          console.log(event.currentTarget.files[0]);\n          setFieldValue('avatarURL', event.currentTarget.files[0]);\n          setIsFormDirty(true);\n        }}\n        style={{ display: 'none' }}\n      />\n\n      <div>\n        <UpdateAvatarButton\n          type=\"button\"\n          onClick={() => inputFileRef.current.click()}\n        >\n          <AiOutlinePlus color=\"white\" />\n        </UpdateAvatarButton>\n      </div>\n    </AvatarContainer>\n  );\n};\n\nexport default Thumb;\n","import styled from 'styled-components';\n\nexport const DateInput = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  max-width: 354px;\n\n  input {\n    width: 100%;\n    padding: 12px 14px;\n    border-radius: 8px;\n    border: 1px solid rgba(17, 17, 17, 0.1);\n    outline: none;\n\n    font-size: 14px;\n\n    :focus {\n      border: 1px solid #111;\n    }\n\n    @media (min-width: 768px) {\n      padding: 14px 18px;\n      font-size: 16px;\n    }\n\n    border-color: ${({ color }) => color};\n  }\n\n  label {\n    color: ${({ color }) => color};\n  }\n`;\n\nexport const Selects = styled.div`\n  display: flex;\n  gap: 6px;\n\n  select {\n    padding: 6px;\n    outline: none;\n    border: 1px solid #fff;\n    border-radius: 4px;\n    font-size: 16px;\n  }\n`;\n\nexport const ControlWrapper = styled.div`\n  button {\n    display: flex;\n    background-color: transparent;\n    border: none;\n    cursor: pointer;\n    padding: 0;\n\n    font-size: 30px;\n\n    color: #fff;\n\n    font-weight: bold;\n    :hover {\n      color: #dce3e5cc;\n    }\n  }\n`;\n\nexport const IconWrapper = styled.div`\n  pointer-events: ${({ isCalendarOpen }) => (isCalendarOpen ? 'auto' : 'none')};\n  cursor: pointer;\n\n  position: absolute;\n  right: 18px;\n\n  top: 35px;\n  font-size: 16px;\n\n  @media (min-width: 768px) {\n    top: 40px;\n    font-size: 18px;\n  }\n`;\n","import React, { useEffect, useState } from 'react';\nimport { ErrorMessage, useField } from 'formik';\nimport DatePicker from 'react-datepicker';\nimport 'components/SmallCalendar/SmallCalendar';\nimport { getMonth, getYear } from 'date-fns';\nimport { formatDateToCustomFormat, getMonthNames, range } from './helpers/date';\nimport {\n  ControlWrapper,\n  DateInput,\n  IconWrapper,\n  Selects,\n} from './styles/Calendar.styled';\nimport { Label, MessageWrapper, ErrorText } from './styles/CustomInput.styled';\nimport { MdNavigateBefore, MdNavigateNext } from 'react-icons/md';\nimport { AiOutlineDown } from 'react-icons/ai';\n\nexport const DatePickerField = ({ name, setFieldValue, setIsFormDirty }) => {\n  const [startDate, setStartDate] = useState(new Date());\n  const [isCalendarOpen, setIsCalendarOpen] = useState(false);\n\n  const [, meta] = useField(name);\n  const error = meta.touched && meta.error;\n  const isValid = meta.touched && !meta.error;\n\n  useEffect(() => {\n    const initialDate = new Date();\n    setStartDate(initialDate);\n    setFieldValue(name, formatDateToCustomFormat(initialDate));\n  }, [name, setFieldValue]);\n\n  const years = range(1950, getYear(new Date()) + 1, 1);\n  const months = getMonthNames();\n\n  const color = error ? 'red' : isValid ? 'green' : 'default-color';\n\n  return (\n    <DateInput color={color}>\n      <Label htmlFor=\"birthday\">Birthday</Label>\n\n      <DatePicker\n        dateFormat=\"dd/MM/yyyy\"\n        renderCustomHeader={({\n          date,\n          changeYear,\n          changeMonth,\n          decreaseMonth,\n          increaseMonth,\n          prevMonthButtonDisabled,\n          nextMonthButtonDisabled,\n        }) => (\n          <ControlWrapper\n            style={{\n              margin: '10px 0',\n              display: 'flex',\n              alignItems: 'center',\n              justifyContent: 'space-between',\n            }}\n          >\n            <button\n              type=\"button\"\n              onClick={decreaseMonth}\n              disabled={prevMonthButtonDisabled}\n            >\n              <MdNavigateBefore />\n            </button>\n\n            <Selects>\n              <select\n                value={getYear(date)}\n                onChange={({ target: { value } }) => changeYear(value)}\n              >\n                {years.map(option => (\n                  <option key={option} value={option}>\n                    {option}\n                  </option>\n                ))}\n              </select>\n\n              <select\n                value={months[getMonth(date)]}\n                onChange={({ target: { value } }) =>\n                  changeMonth(months.indexOf(value))\n                }\n              >\n                {months.map(option => (\n                  <option key={option} value={option}>\n                    {option}\n                  </option>\n                ))}\n              </select>\n            </Selects>\n\n            <button\n              type=\"button\"\n              onClick={increaseMonth}\n              disabled={nextMonthButtonDisabled}\n            >\n              <MdNavigateNext />\n            </button>\n          </ControlWrapper>\n        )}\n        selected={startDate}\n        onChange={date => {\n          if (date) {\n            setFieldValue('birthday', formatDateToCustomFormat(date));\n            setStartDate(date);\n          } else {\n            setFieldValue('birthday', '');\n            setStartDate(null);\n          }\n\n          setIsFormDirty(true);\n        }}\n        onCalendarOpen={() => setIsCalendarOpen(true)}\n        onCalendarClose={() => setIsCalendarOpen(false)}\n      />\n\n      <MessageWrapper>\n        <ErrorMessage name={name} component={ErrorText} />\n      </MessageWrapper>\n\n      <IconWrapper isCalendarOpen={isCalendarOpen}>\n        <AiOutlineDown color={color} />\n      </IconWrapper>\n    </DateInput>\n  );\n};\n","import { CustomInput } from 'components/account/CustomInput';\nimport { Formik } from 'formik';\nimport { FormContainer, FormWrapper, UserInfo } from './styles/Account.styled';\nimport { UserSchema } from './UserSchema';\nimport Thumb from './Avatar';\nimport { DatePickerField } from './Calendar';\nimport { Button } from 'styles/components';\nimport { useState } from 'react';\nimport { useAuth } from 'hooks/useAuth';\nimport { Input } from './styles/CustomInput.styled';\nimport { useDispatch } from 'react-redux';\nimport { updateUser } from 'redux/authorization/operations';\n\nexport const UserForm = () => {\n  const { name, email, phone, birthday, skype, avatarURL } = useAuth();\n  const [isFormDirty, setIsFormDirty] = useState(false);\n  const dispatch = useDispatch();\n\n  const handleSubmit = values => {\n    const formData = new FormData();\n    for (let key in values) {\n      if (key === 'avatarURL') {\n        formData.append(\n          key,\n          values[key] instanceof File ? values[key] : avatarURL\n        );\n      } else {\n        formData.append(key, values[key]);\n      }\n    }\n\n    dispatch(updateUser(formData));\n\n    for (const pair of formData.entries()) {\n      console.log(`${pair[0]}, ${pair[1]}`);\n    }\n\n    setIsFormDirty(false);\n  };\n\n  const initialValues = {\n    name: name ? name : '',\n    birthday: birthday ? birthday : '',\n    email: email ? email : '',\n    phone: phone ? phone : '',\n    skype: skype ? skype : '',\n    avatarURL: '',\n  };\n\n  return (\n    <>\n      {name && (\n        <Formik\n          initialValues={initialValues}\n          validationSchema={UserSchema}\n          onSubmit={handleSubmit}\n          onChange={() => setIsFormDirty(true)}\n        >\n          {({ values, setFieldValue }) => (\n            <FormContainer>\n              <UserInfo>\n                <Thumb\n                  avatar={avatarURL}\n                  file={values.avatarURL}\n                  setFieldValue={setFieldValue}\n                  setIsFormDirty={setIsFormDirty}\n                />\n\n                <p>{name}</p>\n                <p>User</p>\n              </UserInfo>\n\n              <FormWrapper>\n                <div>\n                  <CustomInput\n                    setIsFormDirty={setIsFormDirty}\n                    label=\"User Name\"\n                    name=\"name\"\n                  />\n\n                  <DatePickerField\n                    name=\"birthday\"\n                    setFieldValue={setFieldValue}\n                    setIsFormDirty={setIsFormDirty}\n                  />\n\n                  <Input name=\"email\" type=\"email\" disabled />\n                </div>\n\n                <div>\n                  <CustomInput\n                    label=\"Phone\"\n                    name=\"phone\"\n                    type=\"tel\"\n                    setIsFormDirty={setIsFormDirty}\n                  />\n\n                  <CustomInput\n                    label=\"Skype\"\n                    name=\"skype\"\n                    setIsFormDirty={setIsFormDirty}\n                  />\n                </div>\n              </FormWrapper>\n\n              <Button\n                style={{\n                  cursor: isFormDirty ? 'pointer' : 'auto',\n                  margin: '0 auto',\n                }}\n                type={isFormDirty ? 'submit' : 'button'}\n                disabled={!isFormDirty}\n              >\n                Save changes\n              </Button>\n            </FormContainer>\n          )}\n        </Formik>\n      )}\n    </>\n  );\n};\n","import { UserForm } from 'components/account/UserForm';\n\nconst User = () => {\n  return (\n    <div style={{ padding: 18, background: '#F7F6F9' }}>\n      <UserForm />\n    </div>\n  );\n};\n\nexport default User;\n"],"names":["InputContainer","styled","div","_templateObject","_taggedTemplateLiteral","Input","Field","_templateObject2","Label","label","_templateObject3","IconWrapper","_templateObject4","_ref","error","MessageWrapper","_templateObject5","ErrorText","p","_templateObject6","_templateObject7","CustomInput","name","setIsFormDirty","rest","_objectWithoutProperties","_excluded","_useField","useField","_useField2","_slicedToArray","field","meta","touched","isValid","value","color","_jsxs","children","_jsx","htmlFor","style","_objectSpread","placeholder","concat","borderColor","onChange","event","ErrorMessage","component","BsExclamationCircle","BsCheckCircle","FormContainer","Form","FormWrapper","UserInfo","formatDateToCustomFormat","dateString","date","Date","day","String","getDate","padStart","month","getMonth","year","getFullYear","UserSchema","Yup","shape","avatarURL","min","max","required","birthday","matches","test","parsedNewDate","parts","split","parseInt","parseDateString","email","phone","skype","UpdateAvatarButton","button","buttonColors","blue","AvatarContainer","AvatarImg","img","avatarUrl","avatar","file","setFieldValue","_useState","useState","undefined","_useState2","thumb","setThumb","inputFileRef","useRef","useEffect","reader","FileReader","onloadend","result","readAsDataURL","match","src","alt","ref","id","type","console","log","currentTarget","files","display","onClick","current","click","AiOutlinePlus","DateInput","_ref2","Selects","ControlWrapper","_ref3","isCalendarOpen","DatePickerField","startDate","setStartDate","_useState3","_useState4","setIsCalendarOpen","initialDate","years","start","end","step","arguments","length","i","push","range","getYear","months","DatePicker","dateFormat","renderCustomHeader","changeYear","changeMonth","decreaseMonth","increaseMonth","prevMonthButtonDisabled","nextMonthButtonDisabled","margin","alignItems","justifyContent","disabled","MdNavigateBefore","target","map","option","_ref4","indexOf","MdNavigateNext","selected","onCalendarOpen","onCalendarClose","AiOutlineDown","UserForm","_useAuth","useAuth","isFormDirty","dispatch","useDispatch","initialValues","_Fragment","Formik","validationSchema","onSubmit","values","formData","FormData","key","append","File","updateUser","_step","_iterator","_createForOfIteratorHelper","entries","s","n","done","pair","err","e","f","Thumb","Button","cursor","padding","background"],"sourceRoot":""}