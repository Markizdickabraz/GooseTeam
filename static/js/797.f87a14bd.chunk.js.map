{"version":3,"file":"static/js/797.f87a14bd.chunk.js","mappings":"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","sources":["redux/filterdate/filterdate-selector.js","components/PeriodPaginator/PeriodPaginator.jsx","exampleTask.js","components/StatisticsChart/StatisticsChart.jsx","pages/Statistics.jsx"],"sourcesContent":["export const selectFilterDate = state => state.filterdate;\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectFilterDate } from 'redux/filterdate/filterdate-selector';\nimport { setFilterDate } from 'redux/filterdate/filterdate-slice';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport './PeriodPaginator.css';\n\nconst PeriodPaginator = () => {\n  const filterdate = useSelector(selectFilterDate);\n  const dispatch = useDispatch();\n\n  const CustomInput = React.forwardRef(({ value, onClick }, ref) => (\n    <button className=\"custom-input\" onClick={onClick} ref={ref}>\n      {value}\n    </button>\n  ));\n\n  const handleChange = date => {\n    dispatch(setFilterDate(date[Symbol.toPrimitive]('number')));\n  };\n\n  return (\n    <DatePicker\n      selected={filterdate}\n      onChange={handleChange}\n      customInput={<CustomInput />}\n      dateFormat=\"d MMM yyyy\"\n      calendarStartDay={1}\n      formatWeekDay={nameOfDay => nameOfDay.substr(0, 1)}\n      fixedHeight\n    />\n  );\n};\n\nexport default PeriodPaginator;\n","const tasks = [\n  {\n    title: 'Start page 1',\n    start: '09:00',\n    end: '09:30',\n    priority: 'low',\n    date: '2023-06-23',\n    category: 'to-do',\n  },\n  {\n    title: 'Start page 2',\n    start: '09:02',\n    end: '09:32',\n    priority: 'medium',\n    date: '2023-06-23',\n    category: 'in-progress',\n  },\n  {\n    title: 'Start page 3',\n    start: '09:03',\n    end: '09:33',\n    priority: 'high',\n    date: '2023-06-23',\n    category: 'done',\n  },\n  {\n    title: 'Start page 4',\n    start: '09:04',\n    end: '09:34',\n    priority: 'low',\n    date: '2023-06-23',\n    category: 'to-do',\n  },\n  {\n    title: 'Start page 5',\n    start: '09:05',\n    end: '09:35',\n    priority: 'medium',\n    date: '2023-06-23',\n    category: 'in-progress',\n  },\n  {\n    title: 'Start page 6',\n    start: '09:06',\n    end: '09:36',\n    priority: 'high',\n    date: '2023-06-23',\n    category: 'done',\n  },\n  {\n    title: 'Start page 1',\n    start: '09:00',\n    end: '09:30',\n    priority: 'low',\n    date: '2023-06-24',\n    category: 'to-do',\n  },\n  {\n    title: 'Start page 2',\n    start: '09:02',\n    end: '09:32',\n    priority: 'medium',\n    date: '2023-06-24',\n    category: 'in-progress',\n  },\n  {\n    title: 'Start page 3',\n    start: '09:03',\n    end: '09:33',\n    priority: 'high',\n    date: '2023-06-24',\n    category: 'done',\n  },\n  {\n    title: 'Start page 4',\n    start: '09:04',\n    end: '09:34',\n    priority: 'low',\n    date: '2023-05-24',\n    category: 'to-do',\n  },\n  {\n    title: 'Start page 5',\n    start: '09:05',\n    end: '09:35',\n    priority: 'medium',\n    date: '2023-05-24',\n    category: 'in-progress',\n  },\n  {\n    title: 'Start page 6',\n    start: '09:06',\n    end: '09:36',\n    priority: 'high',\n    date: '2023-05-24',\n    category: 'done',\n  },\n];\nexport const getTasks = () => {\n  return tasks;\n};\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { selectFilterDate } from 'redux/filterdate/filterdate-selector';\nimport {\n  BarChart,\n  Bar,\n  LabelList,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n} from 'recharts';\nimport './StatisticsChart.css';\n\n// Для прикладу створив json\nimport { getTasks } from '../../exampleTask';\n\nconst StatisticsChart = () => {\n  const toDay = useSelector(selectFilterDate);\n  const tasks = getTasks();\n\n  let filteredTasksByDay = null;\n  let filteredTasksByMonth = null;\n  let todoByDay = 0;\n  let inprogressByDay = 0;\n  let doneByDay = 0;\n  let todoByMonth = 0;\n  let inprogressByMonth = 0;\n  let doneByMonth = 0;\n\n  function filteredTasks(tasks) {\n    filteredTasksByDay = tasks.filter(\n      task => new Date(task.date).getDate() === new Date(toDay).getDate()\n    );\n    filteredTasksByMonth = tasks.filter(\n      task => new Date(task.date).getMonth() === new Date(toDay).getMonth()\n    );\n    todoByDay = filteredTasksByDay.filter(\n      task => task.category === 'to-do'\n    ).length;\n    inprogressByDay = filteredTasksByDay.filter(\n      task => task.category === 'in-progress'\n    ).length;\n    doneByDay = filteredTasksByDay.filter(\n      task => task.category === 'done'\n    ).length;\n    todoByMonth = filteredTasksByMonth.filter(\n      task => task.category === 'to-do'\n    ).length;\n    inprogressByMonth = filteredTasksByMonth.filter(\n      task => task.category === 'in-progress'\n    ).length;\n    doneByMonth = filteredTasksByMonth.filter(\n      task => task.category === 'done'\n    ).length;\n  }\n  filteredTasks(tasks);\n\n  const allTasksByDay = todoByDay + inprogressByDay + doneByDay;\n  const allTasksByMonth = todoByMonth + inprogressByMonth + doneByMonth;\n\n  const data = [\n    {\n      name: 'To Do',\n      dv: todoByDay,\n      mv: todoByMonth,\n      dp: `${Math.round((todoByDay / allTasksByDay) * 100) || 0}%`,\n      mp: `${Math.round((todoByMonth / allTasksByMonth) * 100) || 0}%`,\n    },\n    {\n      name: 'In Progress',\n      dv: inprogressByDay,\n      mv: inprogressByMonth,\n      dp: `${Math.round((inprogressByDay / allTasksByDay) * 100) || 0}%`,\n      mp: `${Math.round((inprogressByMonth / allTasksByMonth) * 100) || 0}%`,\n    },\n    {\n      name: 'Done',\n      dv: doneByDay,\n      mv: doneByMonth,\n      dp: `${Math.round((doneByDay / allTasksByDay) * 100) || 0}%`,\n      mp: `${Math.round((doneByMonth / allTasksByMonth) * 100) || 0}%`,\n    },\n  ];\n\n  return (\n    <div className=\"statistics__container\">\n      <BarChart\n        width={860}\n        height={440}\n        data={data}\n        margin={{\n          top: 85,\n          right: 40,\n          left: 40,\n          bottom: 69,\n        }}\n      >\n        <defs>\n          <linearGradient id=\"colorDv\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n            <stop offset=\"5%\" stopColor=\"#FFD2DD\" stopOpacity={0} />\n            <stop offset=\"95%\" stopColor=\"#FFD2DD\" stopOpacity={0.8} />\n          </linearGradient>\n          <linearGradient id=\"colorMv\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n            <stop offset=\"5%\" stopColor=\"#3E85F3\" stopOpacity={0} />\n            <stop offset=\"95%\" stopColor=\"#3E85F3\" stopOpacity={0.8} />\n          </linearGradient>\n        </defs>\n        <CartesianGrid vertical={false} stroke=\"#E3F3FF\" />\n        <XAxis dataKey=\"name\" axisLine={false} tickLine={false} />\n        <YAxis\n          label={{ value: 'Index', position: 'top' }}\n          axisLine={false}\n          tickLine={false}\n        />\n        <Tooltip />\n        <Bar dataKey=\"dv\" fill=\"url(#colorDv)\" barSize={27}>\n          <LabelList dataKey=\"dp\" position=\"top\" />\n        </Bar>\n        <Bar dataKey=\"mv\" fill=\"url(#colorMv)\" barSize={27}>\n          <LabelList dataKey=\"mp\" position=\"top\" />\n        </Bar>\n      </BarChart>\n    </div>\n  );\n};\nexport default StatisticsChart;\n","import React from 'react';\nimport PeriodPaginator from '../components/PeriodPaginator/PeriodPaginator';\nimport StatisticsChart from '../components/StatisticsChart/StatisticsChart';\nimport './StatisticsPage.css';\n\nconst StatisticsPage = () => {\n  return (\n    <div className=\"statistic__container\">\n      <PeriodPaginator />\n      <StatisticsChart />\n    </div>\n  );\n};\n\nexport default StatisticsPage;\n"],"names":["selectFilterDate","state","filterdate","useSelector","dispatch","useDispatch","CustomInput","React","_ref","ref","value","onClick","_jsx","className","children","DatePicker","selected","onChange","date","setFilterDate","Symbol","toPrimitive","customInput","dateFormat","calendarStartDay","formatWeekDay","nameOfDay","substr","fixedHeight","tasks","title","start","end","priority","category","getTasks","toDay","filteredTasksByDay","filteredTasksByMonth","todoByDay","inprogressByDay","doneByDay","todoByMonth","inprogressByMonth","doneByMonth","filter","task","Date","getDate","getMonth","length","filteredTasks","allTasksByDay","allTasksByMonth","data","name","dv","mv","dp","concat","Math","round","mp","_jsxs","BarChart","width","height","margin","top","right","left","bottom","id","x1","y1","x2","y2","offset","stopColor","stopOpacity","CartesianGrid","vertical","stroke","XAxis","dataKey","axisLine","tickLine","YAxis","label","position","Tooltip","Bar","fill","barSize","LabelList","PeriodPaginator","StatisticsChart"],"sourceRoot":""}