{"version":3,"file":"static/js/21.452a08c1.chunk.js","mappings":"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","sources":["exampleTask.js","redux/filterdate/filterdate-selector.js","components/PeriodPaginator/PeriodPaginator.jsx","components/StatisticsChart/StatisticsChart.jsx","pages/Statistics.jsx"],"sourcesContent":["const tasks = [\n  {\n    id: '1',\n    title: 'Start page 1',\n    start: '09:00',\n    end: '09:30',\n    priority: 'low',\n    date: '2023-06-12',\n    category: 'to-do',\n  },\n  {\n    id: '2',\n    title: 'Start page 2',\n    start: '09:02',\n    end: '09:32',\n    priority: 'medium',\n    date: '2023-06-10',\n    category: 'in-progress',\n  },\n  {\n    id: '3',\n    title: 'Start page 3',\n    start: '09:03',\n    end: '09:33',\n    priority: 'high',\n    date: '2023-06-09',\n    category: 'done',\n  },\n  {\n    id: '4',\n    title: 'Start page 4',\n    start: '09:04',\n    end: '09:34',\n    priority: 'low',\n    date: '2023-06-23',\n    category: 'to-do',\n  },\n  {\n    id: '5',\n    title: 'Start page 5',\n    start: '09:05',\n    end: '09:35',\n    priority: 'medium',\n    date: '2023-06-30',\n    category: 'in-progress',\n  },\n  {\n    id: '6',\n    title: 'Start page 6',\n    start: '09:06',\n    end: '09:36',\n    priority: 'high',\n    date: '2023-06-06',\n    category: 'done',\n  },\n  {\n    id: '7',\n    title: 'Start page 1',\n    start: '09:00',\n    end: '09:30',\n    priority: 'low',\n    date: '2023-06-19',\n    category: 'to-do',\n  },\n  {\n    id: '8',\n    title: 'Start page 2',\n    start: '09:02',\n    end: '09:32',\n    priority: 'medium',\n    date: '2023-06-24',\n    category: 'in-progress',\n  },\n  {\n    id: '9',\n    title: 'Start page 3',\n    start: '09:03',\n    end: '09:33',\n    priority: 'high',\n    date: '2023-06-22',\n    category: 'done',\n  },\n  {\n    id: '10',\n    title: 'Start page 4',\n    start: '09:04',\n    end: '09:34',\n    priority: 'low',\n    date: '2023-05-24',\n    category: 'to-do',\n  },\n  {\n    id: '11',\n    title: 'Start page 5',\n    start: '09:05',\n    end: '09:35',\n    priority: 'medium',\n    date: '2023-05-12',\n    category: 'in-progress',\n  },\n  {\n    id: '12',\n    title: 'Start page 6',\n    start: '09:06',\n    end: '09:36',\n    priority: 'high',\n    date: '2023-07-24',\n    category: 'done',\n  },\n];\nexport const getTasks = () => {\n  return tasks;\n};\n","export const selectFilterDate = state => state.filterdate;\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectFilterDate } from 'redux/filterdate/filterdate-selector';\nimport { setFilterDate } from 'redux/filterdate/filterdate-slice';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport './PeriodPaginator.css';\nimport Icons from '../../images/svg/sprite.svg';\n\nconst PeriodPaginator = () => {\n  const filterdate = useSelector(selectFilterDate);\n  const dispatch = useDispatch();\n\n  const CustomInput = React.forwardRef(({ value, onClick }, ref) => (\n    <button className=\"custom-input\" onClick={onClick} ref={ref}>\n      {value}\n    </button>\n  ));\n\n  const handleChange = date => {\n    dispatch(setFilterDate(date[Symbol.toPrimitive]('number')));\n  };\n\n  const addOneDay = (date = new Date()) => {\n    date.setDate(date.getDate() + 1);\n    return date;\n  };\n  const previousOneDay = (date = new Date()) => {\n    date.setDate(date.getDate() - 1);\n    return date;\n  };\n\n  const nextDate = () => {\n    console.log('+1');\n    dispatch(\n      setFilterDate(\n        addOneDay(new Date(filterdate))[Symbol.toPrimitive]('number')\n      )\n    );\n  };\n  const previousDate = () => {\n    console.log('-1');\n    dispatch(\n      setFilterDate(\n        previousOneDay(new Date(filterdate))[Symbol.toPrimitive]('number')\n      )\n    );\n  };\n\n  return (\n    <div className=\"paginator__box\">\n      <DatePicker\n        selected={filterdate}\n        onChange={handleChange}\n        customInput={<CustomInput />}\n        dateFormat=\"d MMMM yyyy\"\n        calendarStartDay={1}\n        formatWeekDay={nameOfDay => nameOfDay.substr(0, 1)}\n        fixedHeight\n      />\n      <div className=\"paginator__btn--box\">\n        <button className=\"arrow__btn\">\n          <svg\n            viewBox=\"0 0 18 18\"\n            className=\"arrow\"\n            onClick={() => previousDate()}\n          >\n            <use xlinkHref={`${Icons}#chevron-left`} />\n          </svg>\n        </button>\n        <button className=\"arrow__btn\" onClick={() => nextDate()}>\n          <svg viewBox=\"0 0 18 18\" className=\"arrow\">\n            <use xlinkHref={`${Icons}#chevron-right`} />\n          </svg>\n        </button>\n      </div>\n      <div className=\"chart__legend--box\">\n        <ul className=\"chart__legend--list\">\n          <li className=\"chart__legend--item\">\n            <p className=\"chart__legend--text\">By Day</p>\n          </li>\n          <li className=\"chart__legend--item\">\n            <p className=\"chart__legend--text other__color\">By Month</p>\n          </li>\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default PeriodPaginator;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { selectFilterDate } from 'redux/filterdate/filterdate-selector';\nimport {\n  BarChart,\n  Bar,\n  LabelList,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  ResponsiveContainer,\n} from 'recharts';\nimport './StatisticsChart.css';\n\n// Для прикладу створив json\nimport { getTasks } from '../../exampleTask';\n\nconst StatisticsChart = () => {\n  const toDay = useSelector(selectFilterDate);\n  const tasks = getTasks();\n\n  let filteredTasksByDay = null;\n  let filteredTasksByMonth = null;\n  let todoByDay = 0;\n  let inprogressByDay = 0;\n  let doneByDay = 0;\n  let todoByMonth = 0;\n  let inprogressByMonth = 0;\n  let doneByMonth = 0;\n\n  function filteredTasks(tasks) {\n    filteredTasksByDay = tasks.filter(\n      task => new Date(task.date).getDate() === new Date(toDay).getDate()\n    );\n    filteredTasksByMonth = tasks.filter(\n      task => new Date(task.date).getMonth() === new Date(toDay).getMonth()\n    );\n    todoByDay = filteredTasksByDay.filter(\n      task => task.category === 'to-do'\n    ).length;\n    inprogressByDay = filteredTasksByDay.filter(\n      task => task.category === 'in-progress'\n    ).length;\n    doneByDay = filteredTasksByDay.filter(\n      task => task.category === 'done'\n    ).length;\n    todoByMonth = filteredTasksByMonth.filter(\n      task => task.category === 'to-do'\n    ).length;\n    inprogressByMonth = filteredTasksByMonth.filter(\n      task => task.category === 'in-progress'\n    ).length;\n    doneByMonth = filteredTasksByMonth.filter(\n      task => task.category === 'done'\n    ).length;\n  }\n  filteredTasks(tasks);\n\n  const allTasksByDay = todoByDay + inprogressByDay + doneByDay;\n  const allTasksByMonth = todoByMonth + inprogressByMonth + doneByMonth;\n\n  const data = [\n    {\n      name: 'To Do',\n      dv: todoByDay,\n      mv: todoByMonth,\n      dp: `${Math.round((todoByDay / allTasksByDay) * 100) || 0}%`,\n      mp: `${Math.round((todoByMonth / allTasksByMonth) * 100) || 0}%`,\n    },\n    {\n      name: 'In Progress',\n      dv: inprogressByDay,\n      mv: inprogressByMonth,\n      dp: `${Math.round((inprogressByDay / allTasksByDay) * 100) || 0}%`,\n      mp: `${Math.round((inprogressByMonth / allTasksByMonth) * 100) || 0}%`,\n    },\n    {\n      name: 'Done',\n      dv: doneByDay,\n      mv: doneByMonth,\n      dp: `${Math.round((doneByDay / allTasksByDay) * 100) || 0}%`,\n      mp: `${Math.round((doneByMonth / allTasksByMonth) * 100) || 0}%`,\n    },\n  ];\n\n  return (\n    <div className=\"statistics__container\">\n      <p className=\"statistics__title\">Tasks</p>\n      <div className=\"bar__chart\">\n        <ResponsiveContainer>\n          <BarChart\n            data={data}\n            margin={{\n              top: 24,\n            }}\n            barGap={14}\n          >\n            <defs>\n              <linearGradient id=\"colorDv\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                <stop offset=\"5%\" stopColor=\"#FFD2DD\" stopOpacity={0} />\n                <stop offset=\"95%\" stopColor=\"#FFD2DD\" stopOpacity={0.8} />\n              </linearGradient>\n              <linearGradient id=\"colorMv\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                <stop offset=\"5%\" stopColor=\"#3E85F3\" stopOpacity={0} />\n                <stop offset=\"95%\" stopColor=\"#3E85F3\" stopOpacity={0.8} />\n              </linearGradient>\n            </defs>\n            <CartesianGrid vertical={false} stroke=\"#E3F3FF\" />\n            <XAxis\n              dataKey=\"name\"\n              axisLine={false}\n              tickLine={false}\n              height={40}\n            />\n            <YAxis\n              axisLine={false}\n              tickLine={false}\n              width={40}\n              allowDecimals={false}\n              tickMargin={20}\n            />\n            <Tooltip />\n            <Bar dataKey=\"dv\" fill=\"url(#colorDv)\" barSize={27}>\n              <LabelList dataKey=\"dp\" position=\"top\" />\n            </Bar>\n            <Bar dataKey=\"mv\" fill=\"url(#colorMv)\" barSize={27}>\n              <LabelList dataKey=\"mp\" position=\"top\" />\n            </Bar>\n          </BarChart>\n        </ResponsiveContainer>\n      </div>\n    </div>\n  );\n};\nexport default StatisticsChart;\n","import React from 'react';\nimport PeriodPaginator from '../components/PeriodPaginator/PeriodPaginator';\nimport StatisticsChart from '../components/StatisticsChart/StatisticsChart';\nimport './StatisticsPage.css';\n\nconst StatisticsPage = () => {\n  return (\n    <div className=\"statistic__container\">\n      <PeriodPaginator />\n      <StatisticsChart />\n    </div>\n  );\n};\n\nexport default StatisticsPage;\n"],"names":["tasks","id","title","start","end","priority","date","category","getTasks","selectFilterDate","state","filterdate","useSelector","dispatch","useDispatch","CustomInput","React","_ref","ref","value","onClick","_jsx","className","children","nextDate","console","log","setFilterDate","arguments","length","undefined","Date","setDate","getDate","addOneDay","Symbol","toPrimitive","previousDate","previousOneDay","_jsxs","DatePicker","selected","onChange","customInput","dateFormat","calendarStartDay","formatWeekDay","nameOfDay","substr","fixedHeight","viewBox","xlinkHref","concat","Icons","toDay","filteredTasksByDay","filteredTasksByMonth","todoByDay","inprogressByDay","doneByDay","todoByMonth","inprogressByMonth","doneByMonth","filter","task","getMonth","filteredTasks","allTasksByDay","allTasksByMonth","data","name","dv","mv","dp","Math","round","mp","ResponsiveContainer","BarChart","margin","top","barGap","x1","y1","x2","y2","offset","stopColor","stopOpacity","CartesianGrid","vertical","stroke","XAxis","dataKey","axisLine","tickLine","height","YAxis","width","allowDecimals","tickMargin","Tooltip","Bar","fill","barSize","LabelList","position","PeriodPaginator","StatisticsChart"],"sourceRoot":""}