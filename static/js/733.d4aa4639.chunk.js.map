{"version":3,"file":"static/js/733.d4aa4639.chunk.js","mappings":"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","sources":["../node_modules/date-fns/esm/add/index.js","../node_modules/date-fns/esm/sub/index.js","components/Сalendar/PeriodPaginator.styled.jsx","components/Сalendar/PeriodPaginator.jsx","components/Сalendar/PeriodTypeSelect.styled.jsx","components/Сalendar/PeriodTypeSelect.jsx","components/Сalendar/CalendarToolbar.styled.jsx","components/Сalendar/CalendarToolbar.jsx","pages/CalendarPage/CalendarSection.styled.jsx","pages/CalendarPage/CalendarPage.jsx","../node_modules/date-fns/esm/addDays/index.js","../node_modules/date-fns/esm/addMonths/index.js","../node_modules/date-fns/esm/startOfToday/index.js","../node_modules/date-fns/esm/subDays/index.js","../node_modules/date-fns/esm/subMonths/index.js"],"sourcesContent":["import _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport addDays from \"../addDays/index.js\";\nimport addMonths from \"../addMonths/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nimport toInteger from \"../_lib/toInteger/index.js\";\n/**\n * @name add\n * @category Common Helpers\n * @summary Add the specified years, months, weeks, days, hours, minutes and seconds to the given date.\n *\n * @description\n * Add the specified years, months, weeks, days, hours, minutes and seconds to the given date.\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Duration} duration - the object with years, months, weeks, days, hours, minutes and seconds to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n *\n * | Key            | Description                        |\n * |----------------|------------------------------------|\n * | years          | Amount of years to be added        |\n * | months         | Amount of months to be added       |\n * | weeks          | Amount of weeks to be added        |\n * | days           | Amount of days to be added         |\n * | hours          | Amount of hours to be added        |\n * | minutes        | Amount of minutes to be added      |\n * | seconds        | Amount of seconds to be added      |\n *\n * All values default to 0\n *\n * @returns {Date} the new date with the seconds added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add the following duration to 1 September 2014, 10:19:50\n * const result = add(new Date(2014, 8, 1, 10, 19, 50), {\n *   years: 2,\n *   months: 9,\n *   weeks: 1,\n *   days: 7,\n *   hours: 5,\n *   minutes: 9,\n *   seconds: 30,\n * })\n * //=> Thu Jun 15 2017 15:29:20\n */\nexport default function add(dirtyDate, duration) {\n  requiredArgs(2, arguments);\n  if (!duration || _typeof(duration) !== 'object') return new Date(NaN);\n  var years = duration.years ? toInteger(duration.years) : 0;\n  var months = duration.months ? toInteger(duration.months) : 0;\n  var weeks = duration.weeks ? toInteger(duration.weeks) : 0;\n  var days = duration.days ? toInteger(duration.days) : 0;\n  var hours = duration.hours ? toInteger(duration.hours) : 0;\n  var minutes = duration.minutes ? toInteger(duration.minutes) : 0;\n  var seconds = duration.seconds ? toInteger(duration.seconds) : 0;\n\n  // Add years and months\n  var date = toDate(dirtyDate);\n  var dateWithMonths = months || years ? addMonths(date, months + years * 12) : date;\n\n  // Add weeks and days\n  var dateWithDays = days || weeks ? addDays(dateWithMonths, days + weeks * 7) : dateWithMonths;\n\n  // Add days, hours, minutes and seconds\n  var minutesToAdd = minutes + hours * 60;\n  var secondsToAdd = seconds + minutesToAdd * 60;\n  var msToAdd = secondsToAdd * 1000;\n  var finalDate = new Date(dateWithDays.getTime() + msToAdd);\n  return finalDate;\n}","import _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport subDays from \"../subDays/index.js\";\nimport subMonths from \"../subMonths/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nimport toInteger from \"../_lib/toInteger/index.js\";\n/**\n * @name sub\n * @category Common Helpers\n * @summary Subtract the specified years, months, weeks, days, hours, minutes and seconds from the given date.\n *\n * @description\n * Subtract the specified years, months, weeks, days, hours, minutes and seconds from the given date.\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Duration} duration - the object with years, months, weeks, days, hours, minutes and seconds to be subtracted\n *\n * | Key     | Description                        |\n * |---------|------------------------------------|\n * | years   | Amount of years to be subtracted   |\n * | months  | Amount of months to be subtracted  |\n * | weeks   | Amount of weeks to be subtracted   |\n * | days    | Amount of days to be subtracted    |\n * | hours   | Amount of hours to be subtracted   |\n * | minutes | Amount of minutes to be subtracted |\n * | seconds | Amount of seconds to be subtracted |\n *\n * All values default to 0\n *\n * @returns {Date} the new date with the seconds subtracted\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Subtract the following duration from 15 June 2017 15:29:20\n * const result = sub(new Date(2017, 5, 15, 15, 29, 20), {\n *   years: 2,\n *   months: 9,\n *   weeks: 1,\n *   days: 7,\n *   hours: 5,\n *   minutes: 9,\n *   seconds: 30\n * })\n * //=> Mon Sep 1 2014 10:19:50\n */\nexport default function sub(date, duration) {\n  requiredArgs(2, arguments);\n  if (!duration || _typeof(duration) !== 'object') return new Date(NaN);\n  var years = duration.years ? toInteger(duration.years) : 0;\n  var months = duration.months ? toInteger(duration.months) : 0;\n  var weeks = duration.weeks ? toInteger(duration.weeks) : 0;\n  var days = duration.days ? toInteger(duration.days) : 0;\n  var hours = duration.hours ? toInteger(duration.hours) : 0;\n  var minutes = duration.minutes ? toInteger(duration.minutes) : 0;\n  var seconds = duration.seconds ? toInteger(duration.seconds) : 0;\n\n  // Subtract years and months\n  var dateWithoutMonths = subMonths(date, months + years * 12);\n\n  // Subtract weeks and days\n  var dateWithoutDays = subDays(dateWithoutMonths, days + weeks * 7);\n\n  // Subtract hours, minutes and seconds\n  var minutestoSub = minutes + hours * 60;\n  var secondstoSub = seconds + minutestoSub * 60;\n  var mstoSub = secondstoSub * 1000;\n  var finalDate = new Date(dateWithoutDays.getTime() - mstoSub);\n  return finalDate;\n}","import styled from 'styled-components';\r\nimport { DEVICE_SIZE } from '../../styles/deviceWidth';\r\nimport * as Variables from '../../styles/variables';\r\n\r\nconst media = {\r\n  tablet: `@media screen and (min-width: ${DEVICE_SIZE.tablet})`,\r\n  desktop: `@media screen and (min-width: ${DEVICE_SIZE.desktop})`,\r\n};\r\n\r\nexport const Paginator = styled.div`\r\ndisplay: flex;\r\ngap: 145px; \r\n${media.tablet} {\r\ngap: 8px;  \r\n}\r\n`\r\n\r\nexport const CurrentDate = styled.div`\r\ndisplay: flex;\r\npadding: 6px 12px;\r\njustify-content: center;\r\nalign-items: center;\r\nwidth: 118px;\r\nbackground-color: ${Variables.backgroundColors.blue};\r\nborder-radius: 8px;\r\ncolor: ${Variables.fontColors.white};\r\nfont-size: 14px;\r\nfont-weight: 700;\r\nline-height: 18px;\r\ntext-transform: uppercase;\r\ntext-align: center;\r\n${media.tablet} {\r\n    width: 131px;\r\n  padding: 8px 12px;\r\n  font-size: 16px;\r\n}\r\n`\r\nexport const ButtonsTab = styled.div`\r\ndisplay: flex;\r\njustify-content: center;\r\nalign-items: center;\r\nborder-radius: 8px;\r\noutline: ${Variables.themeColors.calendarPaginatorBorder};\r\nbackground: ${Variables.themeColors.calendarPaginator};\r\nbox-sizing: border-box;\r\n&:hover{\r\nbox-shadow: ${Variables.themeColors.buttonShadow}};\r\nheight: 30px;\r\n${media.tablet} {\r\n  height: 34px;\r\n}\r\n`\r\n\r\nexport const ArrowButton = styled.button`\r\nbackground-color: transparent;\r\nborder: none;\r\ncursor: pointer;\r\n&:not(:last-child) {\r\n    border-bottom-right-radius: 0;\r\n    border-right: ${Variables.themeColors.calendarPaginatorBorder};\r\n    box-sizing: border-box;\r\n}\r\ndisplay: flex;\r\njustify-content: center;\r\nalign-items: center;\r\nwidth: 36px;\r\nheight: 30px;\r\n${media.tablet} {\r\nwidth: 38px;\r\nheight: 34px; }\r\n`\r\n\r\n\r\n\r\nexport const Arrow = styled.svg`\r\nfill: transparent;\r\nstroke: ${Variables.themeColors.calendarPaginatorIcon};\r\n${media.tablet} {\r\n    width: 18px;\r\n    height: 18px;\r\n}\r\n`","import { CurrentDate, Paginator, ButtonsTab, Arrow, ArrowButton } from \"./PeriodPaginator.styled\";\nimport sprite from '../../images/svg/sprite.svg';\n// import * as Variables from '../../styles/variables';\n\nexport const PeriodPaginator = ({\n  currentDateMonth,\n  currentDateDay,\n  nextMonth,\n  prevMonth,\n  nextDay,\n  prevDay,\n  periodType,\n}) => {\n\n const currentDate = new Date();\n  const currentMonth = currentDate.getMonth();\n  const currentYear = currentDate.getFullYear();\n  const firstDayOfPreviousMonth = new Date(currentDate.getFullYear(), currentMonth - 1, 1);\n\n  \n  const handleClickNext = () => {\n    \n    if (periodType === 'month') {\n      return nextMonth;\n    }\n    return nextDay;\n  };\n  const handleClickPrev = () => {\n\n    if (periodType === 'month') {\n      return prevMonth;\n    }\n    return prevDay;\n  };\n\n\nconst isBackButtonDisabled = () => {\nif (periodType === 'month') {\n  const selectedMonth = new Date(currentDateMonth).getMonth();\n  const selectedYear = new Date(currentDateMonth).getFullYear();\n      return (selectedYear < currentYear) || (selectedYear === currentYear && selectedMonth < currentMonth);\n    }\n    if (periodType === 'day') {\n      const selectedDate = new Date(currentDateDay);\n      const selectedYear = new Date(currentDateMonth).getFullYear();\n      return (selectedYear < currentYear) || (selectedYear === currentYear && selectedDate <= firstDayOfPreviousMonth);\n    }\n    return false;\n  };\n \n  const disabledButton = isBackButtonDisabled();\n\n  return (\n    <Paginator>\n      <CurrentDate>\n        {periodType === 'month' ? currentDateMonth : currentDateDay}\n      </CurrentDate>\n      <ButtonsTab>\n        <ArrowButton type=\"button\" onClick={handleClickPrev()} disabled={isBackButtonDisabled()}>\n          <Arrow width=\"16\" height=\"16\" style={{ stroke: disabledButton ? 'rgba(220, 227, 229, 1)' : '' }}>\n            <use href={`${sprite}#chevron-left`}></use>\n        </Arrow>\n        </ArrowButton>\n        <ArrowButton type=\"button\" onClick={handleClickNext()}>\n          <Arrow width=\"16\" height=\"16\">\n            <use href={`${sprite}#chevron-right`}></use>\n        </Arrow>\n        </ArrowButton>\n      </ButtonsTab>\n    </Paginator>\n  );\n};\n","import styled from 'styled-components';\r\nimport { DEVICE_SIZE } from '../../styles/deviceWidth';\r\nimport * as Variables from '../../styles/variables';\r\n\r\nconst media = {\r\n  tablet: `@media screen and (min-width: ${DEVICE_SIZE.tablet})`,\r\n  desktop: `@media screen and (min-width: ${DEVICE_SIZE.desktop})`,\r\n};\r\n\r\n\r\nexport const PeriodTab = styled.div`\r\nborder-radius: 8px;\r\ndisplay: flex;\r\n`\r\n\r\nexport const PeriodButton = styled.button`\r\nbackground-color: ${Variables.themeColors.periodButton};\r\nborder: none;\r\ncursor: pointer;\r\nwidth: 76px;\r\nheight: 34px;\r\ndisplay: flex;\r\npadding: 8px 16px;\r\njustify-content: center;\r\nalign-items: center;\r\n&:not(:last-child) {\r\n    border-radius: 8px 0px 0px 8px;\r\n    border-right: 1px solid rgba(62, 133, 243, 0.20);\r\n    box-sizing: border-box;\r\n};\r\n&:last-child {\r\n    border-radius: 0px 8px 8px 0px;\r\n    box-sizing: border-box;\r\n};\r\ntext-align: center;\r\nfont-size: 14px;\r\nfont-weight: 500;\r\nline-height: 18px;\r\ncolor: ${Variables.fontColors.blue};\r\n&:hover{\r\nbackground-color: #CAE8FF;\r\n};\r\n&:active{\r\nbackground-color: #CAE8FF;\r\n};\r\n${media.tablet} {\r\nwidth: 82px;\r\nfont-size: 16px;\r\n}\r\n`","import { PeriodButton, PeriodTab } from \"./PeriodTypeSelect.styled\";\nimport { useState, useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nexport const PeriodTypeSelect = ({ setPeriodType}) => {\nconst [activeButtonLocal, setActiveButtonLocal] = useState('month');\n  const location = useLocation();\n\n  useEffect(() => {\n     const path = location.pathname;\n    if (path.includes(\"month\")) {\n      setActiveButtonLocal(\"month\");\n    } else if (path.includes(\"day\")) {\n      setActiveButtonLocal(\"day\");\n    }\n  }, [location]);\n\n  const handleButtonClick = (periodType) => {\n    setActiveButtonLocal(periodType);\n    setPeriodType(periodType);\n  };\n  \n\n  return (\n    <PeriodTab>\n      <PeriodButton\n        type=\"button\"\n        value=\"month\"\n        onClick={() => handleButtonClick('month')}\n        style={{\n          backgroundColor: activeButtonLocal === 'month' ? '#CAE8FF' : '',\n        }}\n      >\n        Month\n      </PeriodButton>\n      <PeriodButton type=\"button\" value=\"day\" onClick={() => handleButtonClick('day')}\n        style={{\n          backgroundColor: activeButtonLocal === 'day' ? '#CAE8FF' : '',\n        }}>\n        Day\n      </PeriodButton>\n    </PeriodTab>\n  );\n};\n","import styled from 'styled-components';\r\nimport { DEVICE_SIZE } from '../../styles/deviceWidth';\r\n\r\nconst media = {\r\n  tablet: `@media screen and (min-width: ${DEVICE_SIZE.tablet})`,\r\n  desktop: `@media screen and (min-width: ${DEVICE_SIZE.desktop})`,\r\n};\r\n\r\nexport const Toolbar = styled.div`\r\ndisplay: flex;\r\nflex-wrap: wrap;\r\nflex-direction: column;\r\ncolumn-gap: 145px;\r\nrow-gap: 18px;\r\nmargin-bottom: 24px;\r\n${media.tablet} {\r\ncolumn-gap: 325px;\r\nrow-gap: 0;\r\nflex-direction: row;\r\n}\r\n\r\n${media.desktop} {\r\ncolumn-gap: 708px;\r\nmargin-bottom: 32px;\r\n}\r\n`","import { format, add, sub } from 'date-fns';\nimport { PeriodPaginator } from './PeriodPaginator';\nimport { PeriodTypeSelect } from './PeriodTypeSelect';\nimport { useNavigate } from 'react-router-dom';\nimport { useEffect } from 'react';\nimport { Toolbar } from './CalendarToolbar.styled';\nimport { useDispatch } from 'react-redux';\nimport { getTasks } from 'redux/tasks/operations';\nexport const CalendarToolbar = ({\n  periodType,\n  setPeriodType,\n  currentDate,\n  setCurrentDate,\n}) => {\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getTasks());\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (periodType === 'month') {\n      return navigate(`${periodType}/${format(currentDate, 'd-MMM-yyyy')}`);\n    }\n    navigate(`${periodType}/${format(currentDate, 'd-MMM-yyyy')}`);\n  }, [periodType, currentDate, navigate]);\n\n  const nextMonth = () => {\n    const currentDateNextMonth = add(currentDate, { months: 1 });\n    setCurrentDate(currentDateNextMonth);\n  };\n  const prevMonth = () => {\n    const currentDatePrevMonth = sub(currentDate, { months: 1 });\n    setCurrentDate(currentDatePrevMonth);\n  };\n  const nextDay = () => {\n    const currentDateNextDay = add(currentDate, { days: 1 });\n    setCurrentDate(currentDateNextDay);\n  };\n  const prevDay = () => {\n    const currentDatePrevDay = sub(currentDate, { days: 1 });\n    setCurrentDate(currentDatePrevDay);\n  };\n  return (\n    <Toolbar>\n      <PeriodPaginator\n        currentDateMonth={format(currentDate, 'MMMM yyyy')}\n        currentDateDay={format(currentDate, 'd MMM yyyy')}\n        nextMonth={nextMonth}\n        prevMonth={prevMonth}\n        nextDay={nextDay}\n        prevDay={prevDay}\n        periodType={periodType}\n      />\n      <PeriodTypeSelect setPeriodType={setPeriodType} />\n    </Toolbar>\n  );\n};\n","import styled from 'styled-components';\r\nimport { DEVICE_SIZE } from '../../styles/deviceWidth';\r\nimport { themeColors } from 'styles/variables';\r\n\r\nconst media = {\r\n  tablet: `@media screen and (min-width: ${DEVICE_SIZE.tablet})`,\r\n  desktop: `@media screen and (min-width: ${DEVICE_SIZE.desktop})`,\r\n};\r\n\r\nexport const Container = styled.section`\r\n  max-width: 375px;\r\n  padding-top: 64px;\r\n  padding-bottom: 52px;\r\n  padding-left: 20px;\r\n  padding-right: 20px;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  background-color: ${themeColors.mainBackground};\r\n  height: 100vh;\r\n  ${media.tablet} {\r\n    max-width: 768px;\r\n    padding-top: 64px;\r\n    padding-bottom: 42px;\r\n    padding-left: 32px;\r\n    padding-right: 32px;\r\n  }\r\n  ${media.desktop} {\r\n    max-width: 1151px;\r\n    padding-top: 33px;\r\n    padding-bottom: 32px;\r\n    padding-left: 32px;\r\n    padding-right: 32px;\r\n    margin: 0;\r\n  }\r\n`;\r\n","import { CalendarToolbar } from '../../components/Сalendar/CalendarToolbar';\nimport { Suspense, useState } from 'react';\nimport { Outlet } from 'react-router-dom';\nimport { startOfToday, format } from 'date-fns';\nimport { redirect } from 'react-router-dom';\nimport { useEffect } from 'react';\nimport { Container } from './CalendarSection.styled';\n\n\n\n\nconst CalendarPage = () => {\n  const [currentDate, setCurrentDate] = useState(startOfToday());\n  const [periodType, setPeriodType] = useState('month');\n \n\n  useEffect(() => {\n    redirect(`/calendar/month/${format(startOfToday(), 'd-MMM-yyyy')}`);\n  }, []);\n\n  return (\n    <Container>\n      <CalendarToolbar\n        currentDate={currentDate}\n        setCurrentDate={setCurrentDate}\n        periodType={periodType}\n        setPeriodType={setPeriodType}\n      />\n      <Suspense fallback=\"Loading...\">\n        <Outlet context={{ setPeriodType, setCurrentDate }} />\n      </Suspense>\n    </Container>\n  );\n};\n\nexport default CalendarPage;\n","import toInteger from \"../_lib/toInteger/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name addDays\n * @category Day Helpers\n * @summary Add the specified number of days to the given date.\n *\n * @description\n * Add the specified number of days to the given date.\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of days to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} - the new date with the days added\n * @throws {TypeError} - 2 arguments required\n *\n * @example\n * // Add 10 days to 1 September 2014:\n * const result = addDays(new Date(2014, 8, 1), 10)\n * //=> Thu Sep 11 2014 00:00:00\n */\nexport default function addDays(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var amount = toInteger(dirtyAmount);\n  if (isNaN(amount)) {\n    return new Date(NaN);\n  }\n  if (!amount) {\n    // If 0 days, no-op to avoid changing times in the hour before end of DST\n    return date;\n  }\n  date.setDate(date.getDate() + amount);\n  return date;\n}","import toInteger from \"../_lib/toInteger/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name addMonths\n * @category Month Helpers\n * @summary Add the specified number of months to the given date.\n *\n * @description\n * Add the specified number of months to the given date.\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of months to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the months added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add 5 months to 1 September 2014:\n * const result = addMonths(new Date(2014, 8, 1), 5)\n * //=> Sun Feb 01 2015 00:00:00\n */\nexport default function addMonths(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var amount = toInteger(dirtyAmount);\n  if (isNaN(amount)) {\n    return new Date(NaN);\n  }\n  if (!amount) {\n    // If 0 months, no-op to avoid changing times in the hour before end of DST\n    return date;\n  }\n  var dayOfMonth = date.getDate();\n\n  // The JS Date object supports date math by accepting out-of-bounds values for\n  // month, day, etc. For example, new Date(2020, 0, 0) returns 31 Dec 2019 and\n  // new Date(2020, 13, 1) returns 1 Feb 2021.  This is *almost* the behavior we\n  // want except that dates will wrap around the end of a month, meaning that\n  // new Date(2020, 13, 31) will return 3 Mar 2021 not 28 Feb 2021 as desired. So\n  // we'll default to the end of the desired month by adding 1 to the desired\n  // month and using a date of 0 to back up one day to the end of the desired\n  // month.\n  var endOfDesiredMonth = new Date(date.getTime());\n  endOfDesiredMonth.setMonth(date.getMonth() + amount + 1, 0);\n  var daysInMonth = endOfDesiredMonth.getDate();\n  if (dayOfMonth >= daysInMonth) {\n    // If we're already at the end of the month, then this is the correct date\n    // and we're done.\n    return endOfDesiredMonth;\n  } else {\n    // Otherwise, we now know that setting the original day-of-month value won't\n    // cause an overflow, so set the desired day-of-month. Note that we can't\n    // just set the date of `endOfDesiredMonth` because that object may have had\n    // its time changed in the unusual case where where a DST transition was on\n    // the last day of the month and its local time was in the hour skipped or\n    // repeated next to a DST transition.  So we use `date` instead which is\n    // guaranteed to still have the original time.\n    date.setFullYear(endOfDesiredMonth.getFullYear(), endOfDesiredMonth.getMonth(), dayOfMonth);\n    return date;\n  }\n}","import startOfDay from \"../startOfDay/index.js\";\n/**\n * @name startOfToday\n * @category Day Helpers\n * @summary Return the start of today.\n * @pure false\n *\n * @description\n * Return the start of today.\n *\n * > ⚠️ Please note that this function is not present in the FP submodule as\n * > it uses `Date.now()` internally hence impure and can't be safely curried.\n *\n * @returns {Date} the start of today\n *\n * @example\n * // If today is 6 October 2014:\n * const result = startOfToday()\n * //=> Mon Oct 6 2014 00:00:00\n */\nexport default function startOfToday() {\n  return startOfDay(Date.now());\n}","import addDays from \"../addDays/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nimport toInteger from \"../_lib/toInteger/index.js\";\n/**\n * @name subDays\n * @category Day Helpers\n * @summary Subtract the specified number of days from the given date.\n *\n * @description\n * Subtract the specified number of days from the given date.\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of days to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the days subtracted\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Subtract 10 days from 1 September 2014:\n * const result = subDays(new Date(2014, 8, 1), 10)\n * //=> Fri Aug 22 2014 00:00:00\n */\nexport default function subDays(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return addDays(dirtyDate, -amount);\n}","import toInteger from \"../_lib/toInteger/index.js\";\nimport addMonths from \"../addMonths/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name subMonths\n * @category Month Helpers\n * @summary Subtract the specified number of months from the given date.\n *\n * @description\n * Subtract the specified number of months from the given date.\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of months to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the months subtracted\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Subtract 5 months from 1 February 2015:\n * const result = subMonths(new Date(2015, 1, 1), 5)\n * //=> Mon Sep 01 2014 00:00:00\n */\nexport default function subMonths(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return addMonths(dirtyDate, -amount);\n}"],"names":["add","dirtyDate","duration","requiredArgs","arguments","_typeof","Date","NaN","years","toInteger","months","weeks","days","hours","minutes","seconds","date","toDate","dateWithMonths","addMonths","dateWithDays","addDays","msToAdd","getTime","sub","dateWithoutMonths","subMonths","dateWithoutDays","subDays","mstoSub","media","tablet","concat","DEVICE_SIZE","desktop","Paginator","styled","div","_templateObject","_taggedTemplateLiteral","CurrentDate","_templateObject2","Variables","blue","white","ButtonsTab","_templateObject3","calendarPaginatorBorder","calendarPaginator","buttonShadow","ArrowButton","button","_templateObject4","Arrow","svg","_templateObject5","calendarPaginatorIcon","PeriodPaginator","_ref","currentDateMonth","currentDateDay","nextMonth","prevMonth","nextDay","prevDay","periodType","currentDate","currentMonth","getMonth","currentYear","getFullYear","firstDayOfPreviousMonth","isBackButtonDisabled","selectedMonth","selectedYear","selectedDate","disabledButton","_jsxs","children","_jsx","type","onClick","disabled","width","height","style","stroke","href","sprite","PeriodTab","PeriodButton","periodButton","PeriodTypeSelect","setPeriodType","_useState","useState","_useState2","_slicedToArray","activeButtonLocal","setActiveButtonLocal","location","useLocation","useEffect","path","pathname","includes","handleButtonClick","value","backgroundColor","Toolbar","CalendarToolbar","setCurrentDate","navigate","useNavigate","dispatch","useDispatch","getTasks","format","currentDateNextMonth","currentDatePrevMonth","currentDateNextDay","currentDatePrevDay","Container","section","themeColors","mainBackground","startOfToday","_useState3","_useState4","redirect","Suspense","fallback","Outlet","context","dirtyAmount","amount","isNaN","setDate","getDate","dayOfMonth","endOfDesiredMonth","setMonth","setFullYear","startOfDay","now"],"sourceRoot":""}