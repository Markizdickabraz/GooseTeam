{"version":3,"file":"static/js/132.3c60a1ae.chunk.js","mappings":"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","sources":["exampleTask.js","components/小alendar/CalendarTable.styled.jsx","components/小alendar/CalendarTable.jsx","components/小alendar/MonthCalendarHead.styled.jsx","components/小alendar/MonthCalendarHead.jsx","pages/CalendarPage/ChoosedMonth.jsx","../node_modules/date-fns/esm/eachDayOfInterval/index.js","../node_modules/date-fns/esm/endOfDay/index.js","../node_modules/date-fns/esm/endOfMonth/index.js","../node_modules/date-fns/esm/isSameMonth/index.js","../node_modules/date-fns/esm/startOfMonth/index.js"],"sourcesContent":["const tasks = [\n  {\n    id: '1',\n    title: 'Start page 1',\n    start: '09:00',\n    end: '09:30',\n    priority: 'low',\n    date: '2023-06-12',\n    category: 'to-do',\n  },\n  {\n    id: '2',\n    title: 'Start page 2',\n    start: '09:02',\n    end: '09:32',\n    priority: 'medium',\n    date: '2023-06-10',\n    category: 'in-progress',\n  },\n  {\n    id: '3',\n    title: 'Start page 3',\n    start: '09:03',\n    end: '09:33',\n    priority: 'high',\n    date: '2023-06-09',\n    category: 'done',\n  },\n  {\n    id: '4',\n    title: 'Start page 4',\n    start: '09:04',\n    end: '09:34',\n    priority: 'low',\n    date: '2023-06-23',\n    category: 'to-do',\n  },\n  {\n    id: '5',\n    title: 'Start page 5',\n    start: '09:05',\n    end: '09:35',\n    priority: 'medium',\n    date: '2023-06-30',\n    category: 'in-progress',\n  },\n  {\n    id: '6',\n    title: 'Start page 6',\n    start: '09:06',\n    end: '09:36',\n    priority: 'high',\n    date: '2023-06-06',\n    category: 'done',\n  },\n  {\n    id: '7',\n    title: 'Start page 1',\n    start: '09:00',\n    end: '09:30',\n    priority: 'low',\n    date: '2023-06-19',\n    category: 'to-do',\n  },\n  {\n    id: '8',\n    title: 'Start page 2',\n    start: '09:02',\n    end: '09:32',\n    priority: 'medium',\n    date: '2023-06-24',\n    category: 'in-progress',\n  },\n  {\n    id: '9',\n    title: 'Start page 3',\n    start: '09:03',\n    end: '09:33',\n    priority: 'high',\n    date: '2023-06-22',\n    category: 'done',\n  },\n  {\n    id: '10',\n    title: 'Start page 4',\n    start: '09:04',\n    end: '09:34',\n    priority: 'low',\n    date: '2023-05-24',\n    category: 'to-do',\n  },\n  {\n    id: '11',\n    title: 'Start page 5',\n    start: '09:05',\n    end: '09:35',\n    priority: 'medium',\n    date: '2023-05-12',\n    category: 'in-progress',\n  },\n  {\n    id: '12',\n    title: 'Start page 6',\n    start: '09:06',\n    end: '09:36',\n    priority: 'high',\n    date: '2023-07-24',\n    category: 'done',\n  },\n];\nexport const getTasks = () => {\n  return tasks;\n};\n","import styled from 'styled-components';\r\nimport { DEVICE_SIZE } from '../../styles/deviceWidth';\r\nimport * as Variables from '../../styles/variables';\r\n\r\nconst media = {\r\n  tablet: `@media screen and (min-width: ${DEVICE_SIZE.tablet})`,\r\n  desktop: `@media screen and (min-width: ${DEVICE_SIZE.desktop})`,\r\n};\r\n\r\nexport const Calendar = styled.ul`\r\nposition: relative;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  list-style: none;\r\n  margin: 0;\r\n  padding: 0;\r\n  border-right: 1px solid #ddd;\r\nborder-bottom: 1px solid #ddd;\r\nborder-radius: 8px;\r\n  ${media.desktop} {\r\n    width: 1087px;\r\n}\r\n`\r\n\r\nexport const CalendarItem = styled.li`\r\nbackground-color: ${Variables.backgroundColors.white};\r\n  position: relative;\r\n  width: calc(100% / 7);\r\n  cursor: pointer;\r\n  height: 94px;\r\n  &::before {\r\n  content: ' ';\r\n  position: absolute;\r\n  width: 1px;\r\n  height: 100%;\r\n  background-color: #ddd;\r\n};\r\n&::after {\r\n  content: ' ';\r\n  position: absolute;\r\n  width: 100%;\r\n  height: 1px;\r\n  background-color: #ddd;\r\n};\r\n  ${media.tablet} {\r\n    height: 144px;\r\n}\r\n  ${media.desktop} {\r\n    height: 125px;\r\n}\r\n`\r\n\r\n\r\nexport const Day = styled.div`\r\n position: absolute;\r\n  top: 8px;\r\n  right: 4px;\r\n  padding: 4px 6px;\r\n  font-size: 12px;\r\n  font-weight: 700;\r\n  line-height: 14px;\r\n  text-transform: uppercase;\r\n  text-align: center;\r\n  border-radius: 8px;\r\n    ${media.tablet} {\r\n    top: 14px;\r\n  right: 14px;\r\n  font-size: 16px;\r\n  line-height: 18px;\r\n}\r\n`\r\n\r\nexport const Event = styled.div`\r\nposition: absolute;\r\ntop: 48px;\r\nleft: 2px;\r\nwidth: 44px;\r\nborder-radius: 8px;\r\nfont-size: 10px;\r\nfont-weight: 700;\r\nline-height: 14px;\r\nfont-size: 10px;\r\nfont-weight: 700;\r\nline-height: 14px;\r\nheight: 22px;\r\npadding: 4px 8px 4px;\r\n${media.tablet} {\r\n width: 92px;  \r\n top: 58px;\r\nleft: 4px; \r\nfont-size: 14px;\r\nline-height: 18px;\r\nheight: 26px;\r\npadding: 4px 12px 4px;\r\n}\r\n${media.desktop} {\r\n width: 139px;  \r\nleft: 8px; \r\n}\r\n`\r\n\r\n","import {\n  startOfMonth,\n  endOfMonth,\n  startOfWeek,\n  endOfWeek,\n  eachDayOfInterval,\n  parse,\n  format,\n  isSameMonth,\n  isSameDay,\n  startOfDay,\n  endOfDay\n} from 'date-fns';\nimport { redirect, useParams, useOutletContext } from 'react-router-dom';\nimport { useState, useEffect } from \"react\";\n\nimport { getTasks } from '../../exampleTask';\nimport { CalendarItem, Day, Event, Calendar } from './CalendarTable.styled';\n\n\nexport const CalendarTable = () => {\n  const { setPeriodType, setCurrentDate } = useOutletContext();\n  const { currentDate } = useParams();\n  const parsedCurrentDate = parse(currentDate, 'd-MMM-yyyy', new Date());\n  const days = eachDayOfInterval({\n    start: startOfWeek(startOfMonth(parsedCurrentDate), { weekStartsOn: 1 }),\n    end: endOfWeek(endOfMonth(parsedCurrentDate), { weekStartsOn: 1 }),\n  });\n  const handleClickRedirect = e => {\n    if (\n      !isSameMonth(\n        parse(e.currentTarget.dataset.date, 'd-MMM-yyyy', new Date()),\n        parsedCurrentDate\n      )\n    ) {\n      return;\n    }\n    redirect(`../day/${e.currentTarget.dataset.date}`, {\n      replace: true,\n    });\n    setPeriodType('day');\n    setCurrentDate(\n      parse(e.currentTarget.dataset.date, 'd-MMMM-yyyy', new Date())\n    );\n  };\n\n  // with file for example\n  const [events, setEvents] = useState([]);\n\n\n  useEffect(() => {\n    const tasks = getTasks();\n      const filteredTasks = tasks.filter(task => isSameMonth(new Date(task.date), new Date(currentDate)));\n      setEvents(filteredTasks);\n    \n}, [currentDate])\n\n  \n  // size of viewport\n  const [windowWidth, setWindowWidth] = useState(window.innerWidth);\n\n  useEffect(() => {\n    const handleResize = () => {\n      setWindowWidth(window.innerWidth);\n    };\n\n    window.addEventListener('resize', handleResize);\n\n    return () => {\n      window.removeEventListener('resize', handleResize);\n    };\n  }, [windowWidth]);\n\n  // short format of text \n  const AbbreviatedText = ({ text, maxLength }) => {\n  if (text.length <= maxLength) {\n    return <span>{text}</span>;\n  }\n\n  const abbreviatedText = text.substring(0, maxLength) + '...';\n\n  return <span title={text}>{abbreviatedText}</span>;\n}\n\n\n  // color of events \n\n  const getEventColor = (priority) => {\n    switch (priority) {\n      case 'low':\n        return { backgroundColor: \"#CEEEFD\", color: \"#3E85F3\" }; \n      case 'medium':\n        return { backgroundColor: \"#FCF0D4\", color: \"#F3B249\" }; \n      case 'high':\n        return { backgroundColor: \"#FFD2DD\", color: \"#EA3D65\" }; \n      default:\n        return '#000000'; \n    }\n  };\n\n  return (\n    <Calendar>\n      {days.map((day, index) => {\n        return (\n          <CalendarItem\n            data-date={format(day, 'd-MMM-yyyy')}\n            onClick={handleClickRedirect}\n            key={format(day, 'd-MMM-yyyy')}\n            className=\"calendar-table-item\"\n          >\n            {isSameMonth(day, parsedCurrentDate) && (\n              <Day\n                style={{\n                  color: isSameDay(day, parsedCurrentDate) ? '#FFFFFF' : '#343434',\n                  backgroundColor: isSameDay(day, parsedCurrentDate)\n                    ? '#3E85F3'\n                    : '#FFFFFF',\n                }}\n              >\n                {format(day, 'd')}\n              </Day>\n            )}\n\n            \n            <div>\n              {windowWidth < 768 &&\n                <div>{events\n                  .filter(event => new Date(event.date) >= startOfDay(day) && new Date(event.date) <= endOfDay(day))\n                  .map(event => (\n                    <Event key={event.id} style={getEventColor(event.priority)}>\n                      <AbbreviatedText text={event.title} maxLength={4} />\n                    </Event>\n\n                  ))}</div>}\n                {windowWidth >= 768 && windowWidth < 1440 && \n                <div>{events\n                  .filter(event => new Date(event.date) >= startOfDay(day) && new Date(event.date) <= endOfDay(day))\n                  .map(event => (\n                    <Event key={event.id} style={getEventColor(event.priority)}>\n                      <AbbreviatedText text={event.title} maxLength={5} />\n                    </Event>\n                  ))}</div>}\n              \n              {windowWidth >= 1440 &&\n                <div>{events\n                  .filter(event => new Date(event.date) >= startOfDay(day) && new Date(event.date) <= endOfDay(day))\n                  .map(event => (\n                    <Event key={event.id} style={getEventColor(event.priority)}>\n                      <AbbreviatedText text={event.title} maxLength={10} />\n                    </Event>\n                  ))}</div>}\n            </div>\n          </CalendarItem>\n        );\n      })}\n    </Calendar>\n  );\n};\n","import styled from 'styled-components';\r\nimport { DEVICE_SIZE } from '../../styles/deviceWidth';\r\nimport * as Variables from '../../styles/variables';\r\n\r\nconst media = {\r\n  tablet: `@media screen and (min-width: ${DEVICE_SIZE.tablet})`,\r\n  desktop: `@media screen and (min-width: ${DEVICE_SIZE.desktop})`,\r\n};\r\n\r\nexport const DayNames = styled.ul`\r\ndisplay: flex;\r\nwidth: 335px;\r\nheight: 50px;\r\nflex-shrink: 0;\r\nborder-radius: 8px;\r\nborder: 1px solid ${Variables.backgroundColors.grey};\r\nbackground: ${Variables.backgroundColors.white};\r\nposition: relative;\r\ngap: 36px;\r\npadding: 16px;\r\nmargin-bottom: 14px;\r\n${media.tablet} {\r\nwidth: 704px;\r\nheight: 46px; \r\nmargin-bottom: 18px;\r\ngap: 65px;\r\npadding: 14px 40px;\r\n}\r\n${media.desktop} {\r\nwidth: 1087px; \r\nmargin-bottom: 15px;\r\npadding: 14px 60px;\r\ngap: 122px;\r\n`\r\n\r\nexport const DayName = styled.li`\r\nfont-size: 16px;\r\nfont-weight: 600;\r\nline-height: 18px;\r\ntext-transform: uppercase;\r\n`","import { DayName, DayNames } from \"./MonthCalendarHead.styled\";\nimport  { useEffect, useState } from 'react';\n\nexport const MonthCalendarHead = () => {\n\nconst [windowWidth, setWindowWidth] = useState(window.innerWidth);\n\n  useEffect(() => {\n    const handleResize = () => {\n      setWindowWidth(window.innerWidth);\n    };\n\n    window.addEventListener('resize', handleResize);\n\n    return () => {\n      window.removeEventListener('resize', handleResize);\n    };\n  }, [windowWidth]);\n\n\n  return <> {windowWidth < 768 ? <DayNames>\n    <DayName>M</DayName>\n    <DayName>T</DayName>\n    <DayName>W</DayName>\n    <DayName>T</DayName>\n    <DayName>F</DayName>\n    <DayName style={{ color: \"#3E85F3\" }}>S</DayName>\n    <DayName style={{ color: \"#3E85F3\" }}>S</DayName>\n  </DayNames>\n    : <DayNames>\n      <DayName>MON</DayName>\n      <DayName>TUE</DayName>\n      <DayName>WED</DayName>\n      <DayName>THU</DayName>\n      <DayName>FRI</DayName>\n      <DayName style={{ color: \"#3E85F3\" }}>SAT</DayName>\n      <DayName style={{ color: \"#3E85F3\" }}>SUN</DayName>\n    </DayNames>}</>\n  ;\n};\n","import { CalendarTable } from 'components/小alendar/CalendarTable';\nimport { MonthCalendarHead } from 'components/小alendar/MonthCalendarHead';\n\n\nconst ChoosedMonth = () => {\n  return (\n    <div>\n      <MonthCalendarHead />\n      <CalendarTable />\n    </div>\n  );\n};\n\nexport default ChoosedMonth;\n","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name eachDayOfInterval\n * @category Interval Helpers\n * @summary Return the array of dates within the specified time interval.\n *\n * @description\n * Return the array of dates within the specified time interval.\n *\n * @param {Interval} interval - the interval. See [Interval]{@link https://date-fns.org/docs/Interval}\n * @param {Object} [options] - an object with options.\n * @param {Number} [options.step=1] - the step to increment by. The value should be more than 1.\n * @returns {Date[]} the array with starts of days from the day of the interval start to the day of the interval end\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.step` must be a number greater than 1\n * @throws {RangeError} The start of an interval cannot be after its end\n * @throws {RangeError} Date in interval cannot be `Invalid Date`\n *\n * @example\n * // Each day between 6 October 2014 and 10 October 2014:\n * const result = eachDayOfInterval({\n *   start: new Date(2014, 9, 6),\n *   end: new Date(2014, 9, 10)\n * })\n * //=> [\n * //   Mon Oct 06 2014 00:00:00,\n * //   Tue Oct 07 2014 00:00:00,\n * //   Wed Oct 08 2014 00:00:00,\n * //   Thu Oct 09 2014 00:00:00,\n * //   Fri Oct 10 2014 00:00:00\n * // ]\n */\nexport default function eachDayOfInterval(dirtyInterval, options) {\n  var _options$step;\n  requiredArgs(1, arguments);\n  var interval = dirtyInterval || {};\n  var startDate = toDate(interval.start);\n  var endDate = toDate(interval.end);\n  var endTime = endDate.getTime();\n\n  // Throw an exception if start date is after end date or if any date is `Invalid Date`\n  if (!(startDate.getTime() <= endTime)) {\n    throw new RangeError('Invalid interval');\n  }\n  var dates = [];\n  var currentDate = startDate;\n  currentDate.setHours(0, 0, 0, 0);\n  var step = Number((_options$step = options === null || options === void 0 ? void 0 : options.step) !== null && _options$step !== void 0 ? _options$step : 1);\n  if (step < 1 || isNaN(step)) throw new RangeError('`options.step` must be a number greater than 1');\n  while (currentDate.getTime() <= endTime) {\n    dates.push(toDate(currentDate));\n    currentDate.setDate(currentDate.getDate() + step);\n    currentDate.setHours(0, 0, 0, 0);\n  }\n  return dates;\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name endOfDay\n * @category Day Helpers\n * @summary Return the end of a day for the given date.\n *\n * @description\n * Return the end of a day for the given date.\n * The result will be in the local timezone.\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the end of a day\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The end of a day for 2 September 2014 11:55:00:\n * const result = endOfDay(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 02 2014 23:59:59.999\n */\nexport default function endOfDay(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  date.setHours(23, 59, 59, 999);\n  return date;\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name endOfMonth\n * @category Month Helpers\n * @summary Return the end of a month for the given date.\n *\n * @description\n * Return the end of a month for the given date.\n * The result will be in the local timezone.\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the end of a month\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The end of a month for 2 September 2014 11:55:00:\n * const result = endOfMonth(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 30 2014 23:59:59.999\n */\nexport default function endOfMonth(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var month = date.getMonth();\n  date.setFullYear(date.getFullYear(), month + 1, 0);\n  date.setHours(23, 59, 59, 999);\n  return date;\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isSameMonth\n * @category Month Helpers\n * @summary Are the given dates in the same month (and year)?\n *\n * @description\n * Are the given dates in the same month (and year)?\n *\n * @param {Date|Number} dateLeft - the first date to check\n * @param {Date|Number} dateRight - the second date to check\n * @returns {Boolean} the dates are in the same month (and year)\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Are 2 September 2014 and 25 September 2014 in the same month?\n * const result = isSameMonth(new Date(2014, 8, 2), new Date(2014, 8, 25))\n * //=> true\n *\n * @example\n * // Are 2 September 2014 and 25 September 2015 in the same month?\n * const result = isSameMonth(new Date(2014, 8, 2), new Date(2015, 8, 25))\n * //=> false\n */\nexport default function isSameMonth(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  return dateLeft.getFullYear() === dateRight.getFullYear() && dateLeft.getMonth() === dateRight.getMonth();\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name startOfMonth\n * @category Month Helpers\n * @summary Return the start of a month for the given date.\n *\n * @description\n * Return the start of a month for the given date.\n * The result will be in the local timezone.\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the start of a month\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The start of a month for 2 September 2014 11:55:00:\n * const result = startOfMonth(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Mon Sep 01 2014 00:00:00\n */\nexport default function startOfMonth(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  date.setDate(1);\n  date.setHours(0, 0, 0, 0);\n  return date;\n}"],"names":["tasks","id","title","start","end","priority","date","category","getTasks","media","tablet","concat","DEVICE_SIZE","desktop","Calendar","styled","ul","_templateObject","_taggedTemplateLiteral","CalendarItem","li","_templateObject2","Variables","white","Day","div","_templateObject3","Event","_templateObject4","CalendarTable","_useOutletContext","useOutletContext","setPeriodType","setCurrentDate","currentDate","useParams","parsedCurrentDate","parse","Date","days","eachDayOfInterval","startOfWeek","startOfMonth","weekStartsOn","endOfWeek","endOfMonth","handleClickRedirect","e","isSameMonth","currentTarget","dataset","redirect","replace","_useState","useState","_useState2","_slicedToArray","events","setEvents","useEffect","filteredTasks","filter","task","_useState3","window","innerWidth","_useState4","windowWidth","setWindowWidth","handleResize","addEventListener","removeEventListener","AbbreviatedText","_ref","text","maxLength","length","_jsx","children","abbreviatedText","substring","getEventColor","backgroundColor","color","map","day","index","_jsxs","format","onClick","className","style","isSameDay","event","startOfDay","endOfDay","DayNames","grey","DayName","MonthCalendarHead","_Fragment","dirtyInterval","options","_options$step","requiredArgs","arguments","interval","startDate","toDate","endTime","getTime","RangeError","dates","setHours","step","Number","isNaN","push","setDate","getDate","dirtyDate","month","getMonth","setFullYear","getFullYear","dirtyDateLeft","dirtyDateRight","dateLeft","dateRight"],"sourceRoot":""}