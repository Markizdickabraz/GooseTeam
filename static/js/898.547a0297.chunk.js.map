{"version":3,"file":"static/js/898.547a0297.chunk.js","mappings":"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","sources":["components/Сalendar/DayCalendarHead.jsx","components/Сalendar/AddTaskBtn.jsx","components/Сalendar/ColumnHeadBar.jsx","components/Сalendar/TaskToolbar.jsx","components/Сalendar/TaskColumnCard.jsx","components/Сalendar/ColumnTasksList.jsx","components/Сalendar/TasksColumn.jsx","components/Сalendar/TaskColumnsList.jsx","pages/CalendarPage/ChoosedDay.jsx"],"sourcesContent":["import { format, isSameDay } from 'date-fns';\nimport { parse, startOfWeek, endOfWeek, eachDayOfInterval } from 'date-fns/esm';\nimport { useParams, redirect, useOutletContext } from 'react-router-dom';\n\nexport const DayCalendarHead = () => {\n  const { currentDay } = useParams();\n  const { setCurrentDate } = useOutletContext();\n  const parsedCurrentDay = parse(currentDay, 'd-MMM-yyyy', new Date());\n  const days = eachDayOfInterval({\n    start: startOfWeek(parsedCurrentDay, { weekStartsOn: 1 }),\n    end: endOfWeek(parsedCurrentDay, { weekStartsOn: 1 }),\n  });\n  const handleClickRedirect = e => {\n    redirect(`../day/${e.currentTarget.dataset.date}`, {\n      replace: true,\n    });\n    setCurrentDate(\n      parse(e.currentTarget.dataset.date, 'd-MMMM-yyyy', new Date())\n    );\n  };\n  return (\n    <ul className=\"day-calendar-head\">\n      {days.map((day, index) => {\n        return (\n          <li\n            data-date={format(day, 'd-MMM-yyyy')}\n            onClick={handleClickRedirect}\n            key={format(day, 'd-MMM-yyyy')}\n            className=\"day-calendar-head-item\"\n          >\n            <p className=\"head-week\">{format(day, 'EEE')}</p>\n            <p\n              style={{\n                color: isSameDay(day, parsedCurrentDay) ? 'white' : 'black',\n                backgroundColor: isSameDay(day, parsedCurrentDay)\n                  ? '#3E85F3'\n                  : 'white',\n              }}\n              className=\"head-day\"\n            >\n              {format(day, 'd')}\n            </p>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n","import { FiPlus } from 'react-icons/fi';\n\nexport const AddTaskBtn = () => {\n  return (\n    <button type=\"button\" className=\"add-todo-btn\">\n      <FiPlus size={24} />\n      <p className=\"button-text\">Add task</p>\n    </button>\n  );\n};\n","import { FiPlusCircle } from 'react-icons/fi';\n\nexport const ColumnHeadBar = ({ title }) => {\n  return (\n    <div className=\"column-head-bar\">\n      <h2>{title}</h2>\n\n      <button type=\"button\" className=\"column-head-bar-btn\">\n        <FiPlusCircle size={24} />\n      </button>\n    </div>\n  );\n};\n","export const TaskToolbar = () => {\n  return <div>Кнопочки для редагування</div>;\n};\n","import { TaskToolbar } from './TaskToolbar';\n\nexport const TaskColumnCard = () => {\n  return (\n    <li className=\"task-column-card\">\n      Картка завдання\n      <TaskToolbar />\n    </li>\n  );\n};\n","import { TaskColumnCard } from './TaskColumnCard';\n\nexport const ColumnTasksList = () => {\n  return (\n    <ul className='tasks-list'>\n      <TaskColumnCard />\n      <TaskColumnCard />\n      <TaskColumnCard />\n      <TaskColumnCard />\n      <TaskColumnCard />\n    </ul>\n  );\n};\n","import { AddTaskBtn } from './AddTaskBtn';\nimport { ColumnHeadBar } from './ColumnHeadBar';\nimport { ColumnTasksList } from './ColumnTasksList';\n\nexport const TasksColumn = ({ title, todos }) => {\n  return (\n    <div className=\"task-column\">\n      <ColumnHeadBar title={title} />\n      <ColumnTasksList />\n      <AddTaskBtn />\n    </div>\n  );\n};\n","import { TasksColumn } from './TasksColumn';\n\nexport const TaskColumnsList = () => {\n  return (\n    <div className=\"task-columns-list\">\n      <TasksColumn title={'To do'} />\n      <TasksColumn title={'In progress'} />\n      <TasksColumn title={'Done'} />\n    </div>\n  );\n};\n","import { DayCalendarHead } from 'components/Сalendar/DayCalendarHead';\nimport { TaskColumnsList } from 'components/Сalendar/TaskColumnsList';\nimport './calendar.css';\n\nconst ChoosedDay = () => {\n  return (\n    <div>\n      <DayCalendarHead />\n      <TaskColumnsList />\n    </div>\n  );\n};\n\nexport default ChoosedDay;\n"],"names":["DayCalendarHead","currentDay","useParams","setCurrentDate","useOutletContext","parsedCurrentDay","parse","Date","days","eachDayOfInterval","start","startOfWeek","weekStartsOn","end","endOfWeek","handleClickRedirect","e","redirect","concat","currentTarget","dataset","date","replace","_jsx","className","children","map","day","index","_jsxs","format","onClick","style","color","isSameDay","backgroundColor","AddTaskBtn","type","FiPlus","size","ColumnHeadBar","_ref","title","FiPlusCircle","TaskToolbar","TaskColumnCard","ColumnTasksList","TasksColumn","todos","TaskColumnsList"],"sourceRoot":""}