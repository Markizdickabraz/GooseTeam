{"version":3,"file":"static/js/797.ba34211b.chunk.js","mappings":"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","sources":["redux/filterdate/filterdate-selector.js","components/PeriodPaginator/PeriodPaginator.jsx","exampleTask.js","components/StatisticsChart/StatisticsChart.jsx","pages/Statistics.jsx"],"sourcesContent":["export const selectFilterDate = state => state.filterdate;\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectFilterDate } from 'redux/filterdate/filterdate-selector';\nimport { setFilterDate } from 'redux/filterdate/filterdate-slice';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport './PeriodPaginator.css';\nimport Icons from '../../images/svg/sprite.svg';\n\nconst PeriodPaginator = () => {\n  const filterdate = useSelector(selectFilterDate);\n  const dispatch = useDispatch();\n\n  const CustomInput = React.forwardRef(({ value, onClick }, ref) => (\n    <button className=\"custom-input\" onClick={onClick} ref={ref}>\n      {value}\n    </button>\n  ));\n\n  const handleChange = date => {\n    dispatch(setFilterDate(date[Symbol.toPrimitive]('number')));\n  };\n\n  const addOneDay = (date = new Date()) => {\n    date.setDate(date.getDate() + 1);\n    return date;\n  };\n  const previousOneDay = (date = new Date()) => {\n    date.setDate(date.getDate() - 1);\n    return date;\n  };\n\n  const nextDate = () => {\n    console.log('+1');\n    dispatch(\n      setFilterDate(\n        addOneDay(new Date(filterdate))[Symbol.toPrimitive]('number')\n      )\n    );\n  };\n  const previousDate = () => {\n    console.log('-1');\n    dispatch(\n      setFilterDate(\n        previousOneDay(new Date(filterdate))[Symbol.toPrimitive]('number')\n      )\n    );\n  };\n\n  return (\n    <div className=\"paginator__box\">\n      <DatePicker\n        selected={filterdate}\n        onChange={handleChange}\n        customInput={<CustomInput />}\n        dateFormat=\"d MMM yyyy\"\n        calendarStartDay={1}\n        formatWeekDay={nameOfDay => nameOfDay.substr(0, 1)}\n        fixedHeight\n      />\n      <div className=\"paginator__btn--box\">\n        <button className=\"arrow__btn\">\n          <svg\n            viewBox=\"0 0 18 18\"\n            className=\"arrow\"\n            onClick={() => previousDate()}\n          >\n            <use xlinkHref={`${Icons}#chevron-left`} />\n          </svg>\n        </button>\n        <button className=\"arrow__btn\" onClick={() => nextDate()}>\n          <svg viewBox=\"0 0 18 18\" className=\"arrow\">\n            <use xlinkHref={`${Icons}#chevron-right`} />\n          </svg>\n        </button>\n      </div>\n      <div className=\"chart__legend--box\">\n        <ul className=\"chart__legend--list\">\n          <li className=\"chart__legend--item\">\n            <p className=\"chart__legend--text\">By Day</p>\n          </li>\n          <li className=\"chart__legend--item\">\n            <p className=\"chart__legend--text other__color\">By Month</p>\n          </li>\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default PeriodPaginator;\n","const tasks = [\n  {\n    title: 'Start page 1',\n    start: '09:00',\n    end: '09:30',\n    priority: 'low',\n    date: '2023-06-23',\n    category: 'to-do',\n  },\n  {\n    title: 'Start page 2',\n    start: '09:02',\n    end: '09:32',\n    priority: 'medium',\n    date: '2023-06-23',\n    category: 'in-progress',\n  },\n  {\n    title: 'Start page 3',\n    start: '09:03',\n    end: '09:33',\n    priority: 'high',\n    date: '2023-06-23',\n    category: 'done',\n  },\n  {\n    title: 'Start page 4',\n    start: '09:04',\n    end: '09:34',\n    priority: 'low',\n    date: '2023-06-23',\n    category: 'to-do',\n  },\n  {\n    title: 'Start page 5',\n    start: '09:05',\n    end: '09:35',\n    priority: 'medium',\n    date: '2023-06-23',\n    category: 'in-progress',\n  },\n  {\n    title: 'Start page 6',\n    start: '09:06',\n    end: '09:36',\n    priority: 'high',\n    date: '2023-06-23',\n    category: 'done',\n  },\n  {\n    title: 'Start page 1',\n    start: '09:00',\n    end: '09:30',\n    priority: 'low',\n    date: '2023-06-24',\n    category: 'to-do',\n  },\n  {\n    title: 'Start page 2',\n    start: '09:02',\n    end: '09:32',\n    priority: 'medium',\n    date: '2023-06-24',\n    category: 'in-progress',\n  },\n  {\n    title: 'Start page 3',\n    start: '09:03',\n    end: '09:33',\n    priority: 'high',\n    date: '2023-06-24',\n    category: 'done',\n  },\n  {\n    title: 'Start page 4',\n    start: '09:04',\n    end: '09:34',\n    priority: 'low',\n    date: '2023-05-24',\n    category: 'to-do',\n  },\n  {\n    title: 'Start page 5',\n    start: '09:05',\n    end: '09:35',\n    priority: 'medium',\n    date: '2023-05-24',\n    category: 'in-progress',\n  },\n  {\n    title: 'Start page 6',\n    start: '09:06',\n    end: '09:36',\n    priority: 'high',\n    date: '2023-05-24',\n    category: 'done',\n  },\n];\nexport const getTasks = () => {\n  return tasks;\n};\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { selectFilterDate } from 'redux/filterdate/filterdate-selector';\nimport {\n  BarChart,\n  Bar,\n  LabelList,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n} from 'recharts';\nimport './StatisticsChart.css';\n\n// Для прикладу створив json\nimport { getTasks } from '../../exampleTask';\n\nconst StatisticsChart = () => {\n  const toDay = useSelector(selectFilterDate);\n  const tasks = getTasks();\n\n  let filteredTasksByDay = null;\n  let filteredTasksByMonth = null;\n  let todoByDay = 0;\n  let inprogressByDay = 0;\n  let doneByDay = 0;\n  let todoByMonth = 0;\n  let inprogressByMonth = 0;\n  let doneByMonth = 0;\n\n  function filteredTasks(tasks) {\n    filteredTasksByDay = tasks.filter(\n      task => new Date(task.date).getDate() === new Date(toDay).getDate()\n    );\n    filteredTasksByMonth = tasks.filter(\n      task => new Date(task.date).getMonth() === new Date(toDay).getMonth()\n    );\n    todoByDay = filteredTasksByDay.filter(\n      task => task.category === 'to-do'\n    ).length;\n    inprogressByDay = filteredTasksByDay.filter(\n      task => task.category === 'in-progress'\n    ).length;\n    doneByDay = filteredTasksByDay.filter(\n      task => task.category === 'done'\n    ).length;\n    todoByMonth = filteredTasksByMonth.filter(\n      task => task.category === 'to-do'\n    ).length;\n    inprogressByMonth = filteredTasksByMonth.filter(\n      task => task.category === 'in-progress'\n    ).length;\n    doneByMonth = filteredTasksByMonth.filter(\n      task => task.category === 'done'\n    ).length;\n  }\n  filteredTasks(tasks);\n\n  const allTasksByDay = todoByDay + inprogressByDay + doneByDay;\n  const allTasksByMonth = todoByMonth + inprogressByMonth + doneByMonth;\n\n  const data = [\n    {\n      name: 'To Do',\n      dv: todoByDay,\n      mv: todoByMonth,\n      dp: `${Math.round((todoByDay / allTasksByDay) * 100) || 0}%`,\n      mp: `${Math.round((todoByMonth / allTasksByMonth) * 100) || 0}%`,\n    },\n    {\n      name: 'In Progress',\n      dv: inprogressByDay,\n      mv: inprogressByMonth,\n      dp: `${Math.round((inprogressByDay / allTasksByDay) * 100) || 0}%`,\n      mp: `${Math.round((inprogressByMonth / allTasksByMonth) * 100) || 0}%`,\n    },\n    {\n      name: 'Done',\n      dv: doneByDay,\n      mv: doneByMonth,\n      dp: `${Math.round((doneByDay / allTasksByDay) * 100) || 0}%`,\n      mp: `${Math.round((doneByMonth / allTasksByMonth) * 100) || 0}%`,\n    },\n  ];\n\n  return (\n    <div className=\"statistics__container\">\n      <p className=\"statistics__title\">Tasks</p>\n      <BarChart\n        width={780}\n        height={360}\n        data={data}\n        margin={{\n          top: 24,\n        }}\n        barGap={14}\n      >\n        <defs>\n          <linearGradient id=\"colorDv\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n            <stop offset=\"5%\" stopColor=\"#FFD2DD\" stopOpacity={0} />\n            <stop offset=\"95%\" stopColor=\"#FFD2DD\" stopOpacity={0.8} />\n          </linearGradient>\n          <linearGradient id=\"colorMv\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n            <stop offset=\"5%\" stopColor=\"#3E85F3\" stopOpacity={0} />\n            <stop offset=\"95%\" stopColor=\"#3E85F3\" stopOpacity={0.8} />\n          </linearGradient>\n        </defs>\n        <CartesianGrid vertical={false} stroke=\"#E3F3FF\" />\n        <XAxis dataKey=\"name\" axisLine={false} tickLine={false} height={40} />\n        <YAxis\n          axisLine={false}\n          tickLine={false}\n          width={40}\n          allowDecimals={false}\n          tickMargin={20}\n        />\n        <Tooltip />\n        <Bar dataKey=\"dv\" fill=\"url(#colorDv)\" barSize={27}>\n          <LabelList dataKey=\"dp\" position=\"top\" />\n        </Bar>\n        <Bar dataKey=\"mv\" fill=\"url(#colorMv)\" barSize={27}>\n          <LabelList dataKey=\"mp\" position=\"top\" />\n        </Bar>\n      </BarChart>\n    </div>\n  );\n};\nexport default StatisticsChart;\n","import React from 'react';\nimport PeriodPaginator from '../components/PeriodPaginator/PeriodPaginator';\nimport StatisticsChart from '../components/StatisticsChart/StatisticsChart';\nimport './StatisticsPage.css';\n\nconst StatisticsPage = () => {\n  return (\n    <div className=\"statistic__container\">\n      <PeriodPaginator />\n      <StatisticsChart />\n    </div>\n  );\n};\n\nexport default StatisticsPage;\n"],"names":["selectFilterDate","state","filterdate","useSelector","dispatch","useDispatch","CustomInput","React","_ref","ref","value","onClick","_jsx","className","children","nextDate","console","log","setFilterDate","date","arguments","length","undefined","Date","setDate","getDate","addOneDay","Symbol","toPrimitive","previousDate","previousOneDay","_jsxs","DatePicker","selected","onChange","customInput","dateFormat","calendarStartDay","formatWeekDay","nameOfDay","substr","fixedHeight","viewBox","xlinkHref","concat","Icons","tasks","title","start","end","priority","category","getTasks","toDay","filteredTasksByDay","filteredTasksByMonth","todoByDay","inprogressByDay","doneByDay","todoByMonth","inprogressByMonth","doneByMonth","filter","task","getMonth","filteredTasks","allTasksByDay","allTasksByMonth","data","name","dv","mv","dp","Math","round","mp","BarChart","width","height","margin","top","barGap","id","x1","y1","x2","y2","offset","stopColor","stopOpacity","CartesianGrid","vertical","stroke","XAxis","dataKey","axisLine","tickLine","YAxis","allowDecimals","tickMargin","Tooltip","Bar","fill","barSize","LabelList","position","PeriodPaginator","StatisticsChart"],"sourceRoot":""}