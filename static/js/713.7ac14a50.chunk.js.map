{"version":3,"file":"static/js/713.7ac14a50.chunk.js","mappings":"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","sources":["../node_modules/date-fns/esm/add/index.js","../node_modules/date-fns/esm/sub/index.js","components/Сalendar/PeriodPaginator.styled.jsx","components/Сalendar/PeriodPaginator.jsx","components/Сalendar/PeriodTypeSelect.styled.jsx","components/Сalendar/PeriodTypeSelect.jsx","components/Сalendar/CalendarToolbar.styled.jsx","components/Сalendar/CalendarToolbar.jsx","../node_modules/date-fns/esm/startOfToday/index.js","pages/CalendarPage/CalendarSection.styled.jsx","pages/CalendarPage/CalendarPage.jsx","../node_modules/date-fns/esm/addDays/index.js","../node_modules/date-fns/esm/addMonths/index.js","../node_modules/date-fns/esm/subDays/index.js","../node_modules/date-fns/esm/subMonths/index.js"],"sourcesContent":["import _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport addDays from \"../addDays/index.js\";\nimport addMonths from \"../addMonths/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nimport toInteger from \"../_lib/toInteger/index.js\";\n/**\n * @name add\n * @category Common Helpers\n * @summary Add the specified years, months, weeks, days, hours, minutes and seconds to the given date.\n *\n * @description\n * Add the specified years, months, weeks, days, hours, minutes and seconds to the given date.\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Duration} duration - the object with years, months, weeks, days, hours, minutes and seconds to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n *\n * | Key            | Description                        |\n * |----------------|------------------------------------|\n * | years          | Amount of years to be added        |\n * | months         | Amount of months to be added       |\n * | weeks          | Amount of weeks to be added        |\n * | days           | Amount of days to be added         |\n * | hours          | Amount of hours to be added        |\n * | minutes        | Amount of minutes to be added      |\n * | seconds        | Amount of seconds to be added      |\n *\n * All values default to 0\n *\n * @returns {Date} the new date with the seconds added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add the following duration to 1 September 2014, 10:19:50\n * const result = add(new Date(2014, 8, 1, 10, 19, 50), {\n *   years: 2,\n *   months: 9,\n *   weeks: 1,\n *   days: 7,\n *   hours: 5,\n *   minutes: 9,\n *   seconds: 30,\n * })\n * //=> Thu Jun 15 2017 15:29:20\n */\nexport default function add(dirtyDate, duration) {\n  requiredArgs(2, arguments);\n  if (!duration || _typeof(duration) !== 'object') return new Date(NaN);\n  var years = duration.years ? toInteger(duration.years) : 0;\n  var months = duration.months ? toInteger(duration.months) : 0;\n  var weeks = duration.weeks ? toInteger(duration.weeks) : 0;\n  var days = duration.days ? toInteger(duration.days) : 0;\n  var hours = duration.hours ? toInteger(duration.hours) : 0;\n  var minutes = duration.minutes ? toInteger(duration.minutes) : 0;\n  var seconds = duration.seconds ? toInteger(duration.seconds) : 0;\n\n  // Add years and months\n  var date = toDate(dirtyDate);\n  var dateWithMonths = months || years ? addMonths(date, months + years * 12) : date;\n\n  // Add weeks and days\n  var dateWithDays = days || weeks ? addDays(dateWithMonths, days + weeks * 7) : dateWithMonths;\n\n  // Add days, hours, minutes and seconds\n  var minutesToAdd = minutes + hours * 60;\n  var secondsToAdd = seconds + minutesToAdd * 60;\n  var msToAdd = secondsToAdd * 1000;\n  var finalDate = new Date(dateWithDays.getTime() + msToAdd);\n  return finalDate;\n}","import _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport subDays from \"../subDays/index.js\";\nimport subMonths from \"../subMonths/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nimport toInteger from \"../_lib/toInteger/index.js\";\n/**\n * @name sub\n * @category Common Helpers\n * @summary Subtract the specified years, months, weeks, days, hours, minutes and seconds from the given date.\n *\n * @description\n * Subtract the specified years, months, weeks, days, hours, minutes and seconds from the given date.\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Duration} duration - the object with years, months, weeks, days, hours, minutes and seconds to be subtracted\n *\n * | Key     | Description                        |\n * |---------|------------------------------------|\n * | years   | Amount of years to be subtracted   |\n * | months  | Amount of months to be subtracted  |\n * | weeks   | Amount of weeks to be subtracted   |\n * | days    | Amount of days to be subtracted    |\n * | hours   | Amount of hours to be subtracted   |\n * | minutes | Amount of minutes to be subtracted |\n * | seconds | Amount of seconds to be subtracted |\n *\n * All values default to 0\n *\n * @returns {Date} the new date with the seconds subtracted\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Subtract the following duration from 15 June 2017 15:29:20\n * const result = sub(new Date(2017, 5, 15, 15, 29, 20), {\n *   years: 2,\n *   months: 9,\n *   weeks: 1,\n *   days: 7,\n *   hours: 5,\n *   minutes: 9,\n *   seconds: 30\n * })\n * //=> Mon Sep 1 2014 10:19:50\n */\nexport default function sub(date, duration) {\n  requiredArgs(2, arguments);\n  if (!duration || _typeof(duration) !== 'object') return new Date(NaN);\n  var years = duration.years ? toInteger(duration.years) : 0;\n  var months = duration.months ? toInteger(duration.months) : 0;\n  var weeks = duration.weeks ? toInteger(duration.weeks) : 0;\n  var days = duration.days ? toInteger(duration.days) : 0;\n  var hours = duration.hours ? toInteger(duration.hours) : 0;\n  var minutes = duration.minutes ? toInteger(duration.minutes) : 0;\n  var seconds = duration.seconds ? toInteger(duration.seconds) : 0;\n\n  // Subtract years and months\n  var dateWithoutMonths = subMonths(date, months + years * 12);\n\n  // Subtract weeks and days\n  var dateWithoutDays = subDays(dateWithoutMonths, days + weeks * 7);\n\n  // Subtract hours, minutes and seconds\n  var minutestoSub = minutes + hours * 60;\n  var secondstoSub = seconds + minutestoSub * 60;\n  var mstoSub = secondstoSub * 1000;\n  var finalDate = new Date(dateWithoutDays.getTime() - mstoSub);\n  return finalDate;\n}","import styled from 'styled-components';\r\nimport { DEVICE_SIZE } from '../../styles/deviceWidth';\r\nimport * as Variables from '../../styles/variables';\r\n\r\nconst media = {\r\n  tablet: `@media screen and (min-width: ${DEVICE_SIZE.tablet})`,\r\n  desktop: `@media screen and (min-width: ${DEVICE_SIZE.desktop})`,\r\n};\r\n\r\nexport const Paginator = styled.div`\r\ndisplay: flex;\r\ngap: 145px; \r\n${media.tablet} {\r\ngap: 8px;  \r\n}\r\n`\r\n\r\nexport const CurrentDate = styled.div`\r\ndisplay: flex;\r\npadding: 6px 12px;\r\njustify-content: center;\r\nalign-items: center;\r\nwidth: 118px;\r\nbackground-color: ${Variables.backgroundColors.blue};\r\nborder-radius: 8px;\r\ncolor: ${Variables.fontColors.white};\r\nfont-size: 14px;\r\nfont-weight: 700;\r\nline-height: 18px;\r\ntext-transform: uppercase;\r\n${media.tablet} {\r\n    width: 131px;\r\n  padding: 8px 12px;\r\n  font-size: 16px;\r\n}\r\n`\r\nexport const ButtonsTab = styled.div`\r\ndisplay: flex;\r\njustify-content: center;\r\nalign-items: center;\r\nborder-radius: 8px;\r\noutline: 1px solid ${Variables.backgroundColors.grey};\r\nbackground: ${Variables.backgroundColors.white};\r\nbox-sizing: border-box;\r\n&:hover{\r\nbox-shadow: 0 4px 4px 0 rgba(0,0,0,.25)};\r\n`\r\n\r\nexport const ArrowButton = styled.button`\r\nbackground-color: transparent;\r\nborder: none;\r\ncursor: pointer;\r\n&:not(:last-child) {\r\n    border-bottom-right-radius: 0;\r\n    border-right: 1px solid #dce3e5;\r\n    box-sizing: border-box;\r\n}\r\ndisplay: flex;\r\njustify-content: center;\r\nalign-items: center;\r\nwidth: 36px;\r\nheight: 30px;\r\n${media.tablet} {\r\nwidth: 38px;\r\nheight: 34px; }\r\n`\r\n\r\n\r\n\r\nexport const Arrow = styled.svg`\r\nfill: transparent;\r\nstroke: black;\r\n${media.tablet} {\r\n    width: 18px;\r\n    height: 18px;\r\n}\r\n`","import { CurrentDate, Paginator, ButtonsTab, Arrow, ArrowButton } from \"./PeriodPaginator.styled\";\nimport sprite from '../../images/svg/sprite.svg';\n// import { useState } from \"react\";\n\nexport const PeriodPaginator = ({\n  currentDateMonth,\n  currentDateDay,\n  nextMonth,\n  prevMonth,\n  nextDay,\n  prevDay,\n  periodType,\n}) => {\n\n const currentDate = new Date();\n  const currentMonth = currentDate.getMonth();\n  const firstDayOfPreviousMonth = new Date(currentDate.getFullYear(), currentMonth - 1, 1);\n\n  const handleClickNext = () => {\n    \n    if (periodType === 'month') {\n      return nextMonth;\n    }\n    return nextDay;\n  };\n  const handleClickPrev = () => {\n\n    if (periodType === 'month') {\n      return prevMonth;\n    }\n    return prevDay;\n  };\n\n\nconst isBackButtonDisabled = () => {\nif (periodType === 'month') {\n      const selectedMonth = new Date(currentDateMonth).getMonth();\n      return selectedMonth < currentMonth;\n    }\n    if (periodType === 'day') {\n    const selectedDate = new Date(currentDateDay);\n      return selectedDate <= firstDayOfPreviousMonth;\n    }\n    return false;\n  };\n \n  const disabledButton = isBackButtonDisabled();\n\n  return (\n    <Paginator>\n      <CurrentDate>\n        {periodType === 'month' ? currentDateMonth : currentDateDay}\n      </CurrentDate>\n      <ButtonsTab>\n        <ArrowButton type=\"button\" onClick={handleClickPrev()} disabled={isBackButtonDisabled()}>\n        <Arrow width=\"16\" height=\"16\" style={{ stroke: disabledButton ? 'rgba(220, 227, 229, 1)' : '' }}>\n            <use href={`${sprite}#chevron-left`}></use>\n        </Arrow>\n        </ArrowButton>\n        <ArrowButton type=\"button\" onClick={handleClickNext()}>\n          <Arrow width=\"16\" height=\"16\">\n            <use href={`${sprite}#chevron-right`}></use>\n        </Arrow>\n        </ArrowButton>\n      </ButtonsTab>\n    </Paginator>\n  );\n};\n","import styled from 'styled-components';\r\nimport { DEVICE_SIZE } from '../../styles/deviceWidth';\r\nimport * as Variables from '../../styles/variables';\r\n\r\nconst media = {\r\n  tablet: `@media screen and (min-width: ${DEVICE_SIZE.tablet})`,\r\n  desktop: `@media screen and (min-width: ${DEVICE_SIZE.desktop})`,\r\n};\r\n\r\n\r\nexport const PeriodTab = styled.div`\r\nborder-radius: 8px;\r\ndisplay: flex;\r\n`\r\n\r\nexport const PeriodButton = styled.button`\r\nbackground-color: #E3F3FF;\r\nborder: none;\r\ncursor: pointer;\r\nwidth: 76px;\r\nheight: 34px;\r\ndisplay: flex;\r\npadding: 8px 16px;\r\njustify-content: center;\r\nalign-items: center;\r\n&:not(:last-child) {\r\n    border-radius: 8px 0px 0px 8px;\r\n    border-right: 1px solid rgba(62, 133, 243, 0.20);\r\n    box-sizing: border-box;\r\n};\r\n&:last-child {\r\n    border-radius: 0px 8px 8px 0px;\r\n    box-sizing: border-box;\r\n};\r\ntext-align: center;\r\nfont-size: 14px;\r\nfont-weight: 500;\r\nline-height: 18px;\r\ncolor: ${Variables.fontColors.blue};\r\n&:hover{\r\nbackground-color: #CAE8FF;\r\n};\r\n&:active{\r\nbackground-color: #CAE8FF;\r\n};\r\n${media.tablet} {\r\nwidth: 82px;\r\nfont-size: 16px;\r\n}\r\n`","import { PeriodButton, PeriodTab } from \"./PeriodTypeSelect.styled\";\nimport { useState } from \"react\";\n\nexport const PeriodTypeSelect = ({ setPeriodType }) => {\nconst [activeButton, setActiveButton] = useState('month');\n\n  const handleButtonClick = (periodType) => {\n    setActiveButton(periodType);\n    setPeriodType(periodType);\n  };\n  \n\n  return (\n    <PeriodTab>\n      <PeriodButton\n        type=\"button\"\n        value=\"month\"\n        onClick={() => handleButtonClick('month')}\n        style={{\n          backgroundColor: activeButton === 'month' ? '#CAE8FF' : '',\n        }}\n      >\n        Month\n      </PeriodButton>\n      <PeriodButton type=\"button\" value=\"day\" onClick={() => handleButtonClick('day')}\n        style={{\n          backgroundColor: activeButton === 'day' ? '#CAE8FF' : '',\n        }}>\n        Day\n      </PeriodButton>\n    </PeriodTab>\n  );\n};\n","import styled from 'styled-components';\r\nimport { DEVICE_SIZE } from '../../styles/deviceWidth';\r\n\r\nconst media = {\r\n  tablet: `@media screen and (min-width: ${DEVICE_SIZE.tablet})`,\r\n  desktop: `@media screen and (min-width: ${DEVICE_SIZE.desktop})`,\r\n};\r\n\r\nexport const Toolbar = styled.div`\r\ndisplay: flex;\r\nflex-wrap: wrap;\r\nflex-direction: column;\r\ncolumn-gap: 145px;\r\nrow-gap: 18px;\r\nmargin-bottom: 24px;\r\n${media.tablet} {\r\ncolumn-gap: 325px;\r\nrow-gap: 0;\r\nflex-direction: row;\r\n}\r\n\r\n${media.desktop} {\r\ncolumn-gap: 708px;\r\nmargin-bottom: 32px;\r\n}\r\n`","import { format, add, sub } from 'date-fns';\nimport { PeriodPaginator } from './PeriodPaginator';\nimport { PeriodTypeSelect } from './PeriodTypeSelect';\nimport { useNavigate } from 'react-router-dom';\nimport { useEffect } from 'react';\nimport { Toolbar } from './CalendarToolbar.styled';\n\nexport const CalendarToolbar = ({\n  periodType,\n  setPeriodType,\n  currentDate,\n  setCurrentDate,\n}) => {\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    if (periodType === 'month') {\n      return navigate(`${periodType}/${format(currentDate, 'd-MMM-yyyy')}`);\n    }\n    navigate(`${periodType}/${format(currentDate, 'd-MMM-yyyy')}`);\n  }, [periodType, currentDate, navigate]);\n\n  const nextMonth = () => {\n    const currentDateNextMonth = add(currentDate, { months: 1 });\n    setCurrentDate(currentDateNextMonth);\n  };\n  const prevMonth = () => {\n    const currentDatePrevMonth = sub(currentDate, { months: 1 });\n    setCurrentDate(currentDatePrevMonth);\n  };\n  const nextDay = () => {\n    const currentDateNextDay = add(currentDate, { days: 1 });\n    setCurrentDate(currentDateNextDay);\n  };\n  const prevDay = () => {\n    const currentDatePrevDay = sub(currentDate, { days: 1 });\n    setCurrentDate(currentDatePrevDay);\n  };\n  return (\n    <Toolbar>\n      <PeriodPaginator\n        currentDateMonth={format(currentDate, 'MMMM yyyy')}\n        currentDateDay={format(currentDate, 'd MMM yyyy')}\n        nextMonth={nextMonth}\n        prevMonth={prevMonth}\n        nextDay={nextDay}\n        prevDay={prevDay}\n        periodType={periodType}\n      />\n      <PeriodTypeSelect setPeriodType={setPeriodType} />\n    </Toolbar>\n  );\n};\n","import startOfDay from \"../startOfDay/index.js\";\n/**\n * @name startOfToday\n * @category Day Helpers\n * @summary Return the start of today.\n * @pure false\n *\n * @description\n * Return the start of today.\n *\n * > ⚠️ Please note that this function is not present in the FP submodule as\n * > it uses `Date.now()` internally hence impure and can't be safely curried.\n *\n * @returns {Date} the start of today\n *\n * @example\n * // If today is 6 October 2014:\n * const result = startOfToday()\n * //=> Mon Oct 6 2014 00:00:00\n */\nexport default function startOfToday() {\n  return startOfDay(Date.now());\n}","import styled from 'styled-components';\r\nimport { DEVICE_SIZE } from '../../styles/deviceWidth';\r\n\r\n\r\nconst media = {\r\n  tablet: `@media screen and (min-width: ${DEVICE_SIZE.tablet})`,\r\n  desktop: `@media screen and (min-width: ${DEVICE_SIZE.desktop})`,\r\n};\r\n\r\nexport const Container = styled.section`\r\n  max-width: 375px;\r\n  padding-top: 64px;\r\n  padding-bottom: 52px;\r\n  padding-left: 20px;\r\n  padding-right: 20px;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  background-color: #F7F6F9;\r\n  height: 100vh;\r\n  ${media.tablet} {\r\n    max-width: 768px;\r\n    padding-top: 64px;\r\n  padding-bottom: 42px;\r\n  padding-left: 32px;\r\n  padding-right: 32px;\r\n  }\r\n  ${media.desktop} {\r\n    max-width: 1440px;\r\n    padding-top: 33px;\r\n  padding-bottom: 32px;\r\n  padding-left: 32px;\r\n  padding-right: 32px;\r\n  }\r\n`;","import { CalendarToolbar } from '../../components/Сalendar/CalendarToolbar';\nimport { Suspense, useState } from 'react';\nimport { Outlet } from 'react-router-dom';\nimport { startOfToday, format } from 'date-fns';\nimport { redirect } from 'react-router-dom';\nimport { useEffect } from 'react';\nimport { Container } from './CalendarSection.styled';\n// import { useDispatch} from \"react-redux\";\n// import { getTasks } from 'redux/tasks/operations';\n\n\nconst CalendarPage = () => {\n  const [currentDate, setCurrentDate] = useState(startOfToday());\n  const [periodType, setPeriodType] = useState('month');\n  // const dispatch = useDispatch();\n  \n\n  useEffect(() => {\n    redirect(`/calendar/month/${format(startOfToday(), 'd-MMM-yyyy')}`);\n    // const result = dispatch(getTasks());\n    // console.log(result)\n  }, []);\n\n  return (\n    \n    <Container>\n      <CalendarToolbar\n        currentDate={currentDate}\n        setCurrentDate={setCurrentDate}\n        periodType={periodType}\n        setPeriodType={setPeriodType}\n      />\n      <Suspense fallback=\"Loading...\">\n        <Outlet context={{ setPeriodType, setCurrentDate }} />\n      </Suspense>\n      </Container>\n      \n  );\n};\n\nexport default CalendarPage;\n","import toInteger from \"../_lib/toInteger/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name addDays\n * @category Day Helpers\n * @summary Add the specified number of days to the given date.\n *\n * @description\n * Add the specified number of days to the given date.\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of days to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} - the new date with the days added\n * @throws {TypeError} - 2 arguments required\n *\n * @example\n * // Add 10 days to 1 September 2014:\n * const result = addDays(new Date(2014, 8, 1), 10)\n * //=> Thu Sep 11 2014 00:00:00\n */\nexport default function addDays(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var amount = toInteger(dirtyAmount);\n  if (isNaN(amount)) {\n    return new Date(NaN);\n  }\n  if (!amount) {\n    // If 0 days, no-op to avoid changing times in the hour before end of DST\n    return date;\n  }\n  date.setDate(date.getDate() + amount);\n  return date;\n}","import toInteger from \"../_lib/toInteger/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name addMonths\n * @category Month Helpers\n * @summary Add the specified number of months to the given date.\n *\n * @description\n * Add the specified number of months to the given date.\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of months to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the months added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add 5 months to 1 September 2014:\n * const result = addMonths(new Date(2014, 8, 1), 5)\n * //=> Sun Feb 01 2015 00:00:00\n */\nexport default function addMonths(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var amount = toInteger(dirtyAmount);\n  if (isNaN(amount)) {\n    return new Date(NaN);\n  }\n  if (!amount) {\n    // If 0 months, no-op to avoid changing times in the hour before end of DST\n    return date;\n  }\n  var dayOfMonth = date.getDate();\n\n  // The JS Date object supports date math by accepting out-of-bounds values for\n  // month, day, etc. For example, new Date(2020, 0, 0) returns 31 Dec 2019 and\n  // new Date(2020, 13, 1) returns 1 Feb 2021.  This is *almost* the behavior we\n  // want except that dates will wrap around the end of a month, meaning that\n  // new Date(2020, 13, 31) will return 3 Mar 2021 not 28 Feb 2021 as desired. So\n  // we'll default to the end of the desired month by adding 1 to the desired\n  // month and using a date of 0 to back up one day to the end of the desired\n  // month.\n  var endOfDesiredMonth = new Date(date.getTime());\n  endOfDesiredMonth.setMonth(date.getMonth() + amount + 1, 0);\n  var daysInMonth = endOfDesiredMonth.getDate();\n  if (dayOfMonth >= daysInMonth) {\n    // If we're already at the end of the month, then this is the correct date\n    // and we're done.\n    return endOfDesiredMonth;\n  } else {\n    // Otherwise, we now know that setting the original day-of-month value won't\n    // cause an overflow, so set the desired day-of-month. Note that we can't\n    // just set the date of `endOfDesiredMonth` because that object may have had\n    // its time changed in the unusual case where where a DST transition was on\n    // the last day of the month and its local time was in the hour skipped or\n    // repeated next to a DST transition.  So we use `date` instead which is\n    // guaranteed to still have the original time.\n    date.setFullYear(endOfDesiredMonth.getFullYear(), endOfDesiredMonth.getMonth(), dayOfMonth);\n    return date;\n  }\n}","import addDays from \"../addDays/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nimport toInteger from \"../_lib/toInteger/index.js\";\n/**\n * @name subDays\n * @category Day Helpers\n * @summary Subtract the specified number of days from the given date.\n *\n * @description\n * Subtract the specified number of days from the given date.\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of days to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the days subtracted\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Subtract 10 days from 1 September 2014:\n * const result = subDays(new Date(2014, 8, 1), 10)\n * //=> Fri Aug 22 2014 00:00:00\n */\nexport default function subDays(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return addDays(dirtyDate, -amount);\n}","import toInteger from \"../_lib/toInteger/index.js\";\nimport addMonths from \"../addMonths/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name subMonths\n * @category Month Helpers\n * @summary Subtract the specified number of months from the given date.\n *\n * @description\n * Subtract the specified number of months from the given date.\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of months to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the months subtracted\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Subtract 5 months from 1 February 2015:\n * const result = subMonths(new Date(2015, 1, 1), 5)\n * //=> Mon Sep 01 2014 00:00:00\n */\nexport default function subMonths(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return addMonths(dirtyDate, -amount);\n}"],"names":["add","dirtyDate","duration","requiredArgs","arguments","_typeof","Date","NaN","years","toInteger","months","weeks","days","hours","minutes","seconds","date","toDate","dateWithMonths","addMonths","dateWithDays","addDays","msToAdd","getTime","sub","dateWithoutMonths","subMonths","dateWithoutDays","subDays","mstoSub","media","tablet","concat","DEVICE_SIZE","desktop","Paginator","styled","div","_templateObject","_taggedTemplateLiteral","CurrentDate","_templateObject2","Variables","blue","white","ButtonsTab","_templateObject3","grey","ArrowButton","button","_templateObject4","Arrow","svg","_templateObject5","PeriodPaginator","_ref","currentDateMonth","currentDateDay","nextMonth","prevMonth","nextDay","prevDay","periodType","currentDate","currentMonth","getMonth","firstDayOfPreviousMonth","getFullYear","isBackButtonDisabled","disabledButton","_jsxs","children","_jsx","type","onClick","disabled","width","height","style","stroke","href","sprite","PeriodTab","PeriodButton","PeriodTypeSelect","setPeriodType","_useState","useState","_useState2","_slicedToArray","activeButton","setActiveButton","handleButtonClick","value","backgroundColor","Toolbar","CalendarToolbar","setCurrentDate","navigate","useNavigate","useEffect","format","currentDateNextMonth","currentDatePrevMonth","currentDateNextDay","currentDatePrevDay","startOfToday","startOfDay","now","Container","section","_useState3","_useState4","redirect","Suspense","fallback","Outlet","context","dirtyAmount","amount","isNaN","setDate","getDate","dayOfMonth","endOfDesiredMonth","setMonth","setFullYear"],"sourceRoot":""}